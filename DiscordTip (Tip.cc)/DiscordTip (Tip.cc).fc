
//==================//
//script Written by: ‚Ä¢‚Ä¢AviramDayan‚Ä¢‚Ä¢ 05/12/2018 06:00AM 
//Last Update: 13/02/2021 12:00AM - Version 83
//==================//

using System;
using FaucetCollector.Script;
using System.Text.RegularExpressions;
using OpenQA.Selenium;
using OpenQA.Selenium.Interactions;
//css_inc RecaptchaUtilities

public class DiscordScript: FaucetScript
{
    /// <summary>
    /// List of Settings that will be shown in the bot when selecting this Faucet in the bot.
    /// You can get the value the user entered with the methods: GetSetting("[Name of the FaucetSetting]"), GetBoolSetting and GetDateTimeSetting
    /// You can also create a new setting value using SetSetting("[Name you want to use]", "value")
    /// </summary>
    public override FaucetSettings Settings
    {
        get
        {
            return new FaucetSettings("http://discordapp.com/")
            {
                new FaucetSetting(){Name="Email",Display="Email - Discordapp Login",Type=EditorType.TextBox,Required=true},
                new FaucetSetting(){Name="Pass",Display="Password - Discordapp Login",Type=EditorType.Password,Required=true},
                			
				//new FaucetSetting(){Name="DeleteCookies",Display="Delete Cookies - Sometimes solves problems (in login) if you have (Recommended)",Type=EditorType.CheckBox,Default=false},
				new FaucetSetting(){Name="ALLIN_Success",Display="ALLIN_Success - if ON - it will Skip on all 'Discordtip Main Bot Vote' + 'AirDrops' Tasks & will check same as Success - If you've already done them + If you don't want to repeat the all your actions (under) ",Type=EditorType.CheckBox,Default=false},
				new FaucetSetting(){Name="All_AirDrop_Success",Display="All_AirDrop_Success - if ON - it will Skip on all 'AirDrops' Tasks & check same as Success",Type=EditorType.CheckBox,Default=false},
                new FaucetSetting(){Name="ProtectionSetEnglishLanguage",Display="ProtectionSetEnglishLanguage - On/off",Type=EditorType.CheckBox,Default=true},	

                new FaucetSetting(){Name="Discordtip_Main_vote_OnOff",Display="Discordtip Bot (Tip.cc) | Main - Vote - On/off",Type=EditorType.CheckBox,Default=true},						
                new FaucetSetting(){Name="Discordtip_Main_Airdrop_1_OnOff",Display="Discordtip Bot (Tip.cc) | Main - Airdrop 1 - 'giveaways' channel - On/off",Type=EditorType.CheckBox,Default=true},						
                new FaucetSetting(){Name="Discordtip_Main_Airdrop_2_OnOff",Display="Discordtip Bot (Tip.cc) | Main - Airdrop 2 - 'drops-and-begging' channel - On/off",Type=EditorType.CheckBox,Default=true},						
                new FaucetSetting(){Name="Discordtip_Main_Airdrop_3_OnOff",Display="Discordtip Bot (Tip.cc) | Main - Airdrop 3 - 'promos' channel - On/off",Type=EditorType.CheckBox,Default=true},						

				new FaucetSetting(){Name="Discordtip_Main_ID",Display="Discordtip Bot | Main - Vote and Claim between 100 to 500 satoshi - every 12 hours' ",Default="617037497574359050",Type=EditorType.TextBox,Required=true},
				new FaucetSetting(){Name="Menu_Bot_Currency",Display="Discordtip Bot | Main - Menu Bot Currency - Select Favorite Currency (correctly available only 'BTC')",Type=EditorType.ComboBox,Default="btc",Items=new System.Collections.Generic.List<string>{"btc","bch","btg","dash","dgb","doge","eos","eth","ethos","ltc","omg","wax","xzc","zec"}},

                new FaucetSetting(){Name="Discordtip_FaucetCollector_OnOff",Display="FaucetCollector - AirDrop - 'giveaways' channel - OnOff",Type=EditorType.CheckBox,Default=true},		
                
				new FaucetSetting(){Name="Discordtip_LaccsFaucet_vote_OnOff",Display="Discordtip_LaccsFaucet_vote - On/off",Type=EditorType.CheckBox,Default=true},
				new FaucetSetting(){Name="Discordtip_LaccsFaucet_Main_ID",Display="LaccsFaucet - Vote and Claim between 50 to 100 satoshi - every 12 hours' ",Default="719287586849423420",Type=EditorType.TextBox,Required=true},
                new FaucetSetting(){Name="Discordtip_LaccsFaucet_BTC_OnOff",Display="LaccsFaucet BTC - AirDrop - 'commands' channel - On/off",Type=EditorType.CheckBox,Default=true},	
				new FaucetSetting(){Name="Command_1",Display="LaccsFaucet_BTC - Command_1 - every 12 hours",Default="%vote",Type=EditorType.TextBox,Required=true},
				new FaucetSetting(){Name="Command_2",Display="LaccsFaucet_BTC - Command_2 - every 3 hours",Default="%claim",Type=EditorType.TextBox,Required=true},

				new FaucetSetting(){Name="Discordtip_Tippi_vote_OnOff",Display="Discordtip_Tippi_vote - On/off",Type=EditorType.CheckBox,Default=true},
				new FaucetSetting(){Name="Discordtip_Tippi_Main_ID",Display="Tippi - Vote and Claim between 50 to 100 satoshi - every 12 hours' ",Default="569955063519510549",Type=EditorType.TextBox,Required=true},
               
				new FaucetSetting(){Name="Discordtip_CryptoMoon_Airdrop_1_OnOff",Display="CryptoMoon - AirDrop 1 - 'üí≤-raining-üèô' channel - OnOff",Type=EditorType.CheckBox,Default=true},		
				new FaucetSetting(){Name="Discordtip_CryptoMoon_Airdrop_2_OnOff",Display="CryptoMoon - AirDrop 2 - 'üí≤-airdrops-üéâ' channel - OnOff",Type=EditorType.CheckBox,Default=true},		
				new FaucetSetting(){Name="Discordtip_CryptoMoon_Airdrop_3_OnOff",Display="CryptoMoon - AirDrop 3 - 'tip-cc' channel - OnOff",Type=EditorType.CheckBox,Default=true},		
				new FaucetSetting(){Name="Discordtip_CryptoMoon_Airdrop_4_OnOff",Display="CryptoMoon - AirDrop 4 - 'üåöüåÇblack-rain-event‚òÇ' channel - OnOff",Type=EditorType.CheckBox,Default=true},		
				new FaucetSetting(){Name="Discordtip_CryptoMoon_Faucet_1_OnOff",Display="CryptoMoon - Faucet 1 - 'tipbot-faucet' channel - OnOff",Type=EditorType.CheckBox,Default=true},		
				
				new FaucetSetting(){Name="Discordtip_DreamTeam_Airdrop_1_OnOff",Display="DreamTeam - AirDrop 1 - 'give-aways' channel - OnOff",Type=EditorType.CheckBox,Default=true},		

				new FaucetSetting(){Name="Discordtip_Zero_Airdrop_1_OnOff",Display="Zero - AirDrop 1 - 'zero-tip-üí∏' channel - OnOff",Type=EditorType.CheckBox,Default=true},		

                new FaucetSetting(){Name="Discordtip_FreeCryptoWorld_OnOff",Display="FreeCryptoWorld - Faucet 1 - 'grid_grc' channel - OnOff",Type=EditorType.CheckBox,Default=false},		

                new FaucetSetting(){Name="Discordtip_GridCoin_OnOff",Display="GridCoin - Faucet - 'wallet-bot' channel - OnOff",Type=EditorType.CheckBox,Default=false},		
 
				new FaucetSetting(){Name="AutoWithdraw_BTC",Display="AutoWithdraw BTC - On/off",Type=EditorType.CheckBox,Default=false},		
				new FaucetSetting(){Name="AutoWithdraw_DOGE",Display="AutoWithdraw DOGE - On/off",Type=EditorType.CheckBox,Default=false},	
				//new FaucetSetting(){Name="AutoWithdraw_GridCoin",Display="AutoWithdraw GridCoin - On/off",Type=EditorType.CheckBox,Default=false},	
				
				new FaucetSetting(){Name="WalletAddress_BTC",Display="WalletAddress BTC",Type=EditorType.TextBox,Required=false},
				new FaucetSetting(){Name="AutoDisableWithdrawAfterSuccessful_BTC",Display="AutoDisableWithdrawAfterSuccessful_BTC",Type=EditorType.CheckBox,Required=false},
				new FaucetSetting(){Name="WalletAddress_DOGE",Display="WalletAddress DOGE",Type=EditorType.TextBox,Required=false},			
				new FaucetSetting(){Name="AutoDisableWithdrawAfterSuccessful_DOGE",Display="AutoDisableWithdrawAfterSuccessful_DOGE",Type=EditorType.CheckBox,Required=false},
					
				//new FaucetSetting(){Name="WalletAddress_GridCoin",Display="WalletAddress GridCoin",Type=EditorType.TextBox,Required=false},

				//new FaucetSetting(){Name="Input_Custom_Bot_ID_Setting",Display="Enter Custom bot ID (option)",Default="Enter Custom Bot ID",Type=EditorType.TextBox,Required=false},
                //new FaucetSetting(){Name="Custom_Bot_ID_OnOff",Display="Custom bot ID - On/off (in default is off)",Type=EditorType.CheckBox,Default=false},
                //new FaucetSetting(){Name="WalletAddress",Display="Wallet Address (option)",Type=EditorType.TextBox,Required=false},

                //insert user settings here
                //new FaucetSetting { 
                //    Name = "Name of your setting", 
                //    Display = "Display shown in Faucet Collector", 
                //    Type = EditorType.TextBox | EditorType.Password | EditorType.CheckBox | EditorType.Wallet | EditorType.Numeric | EditorType.ComboBox | EditorType.CheckComboBox, 
                //    Required = true | false, 
                //    Default = "Optionally a default value" | true | false | null.
                //    Items = new List<string> { "item1", "item2" } (only valid for ComboBox or CheckComboBox)
                //} 
            };
        }
    }

	
    //My ServerNameID
    string TipCC_NameID_String = "tip.cc#7731";
    //==========//

    string ServerCaptchaBot_NameID_String = "Server Captcha Bot#3928";
    //==========//
	
	
//============================================================//
//the number of "successes" in the script - when are finished  
//============================================================//
    public override void Start()
    {
        ad = false;
       
        //Title all in
        Title = "Discord | Discordtip | TopSite"; 

		SuccessXPath = "//*"; //div[@class='reaction-1ELvT8'] //img[contains(@src,'/assets/612f3fc9dedfd368820b55c4cf259c07.svg')] 
        FailXPath = "//*"; //*[text()='']

        //Let Faucet Collector start up everything
        base.Start();
    }
//============================================================//
//the number of "successes" in the script - when are finished  
//============================================================//


 bool ad; //custom bool

//========//
//DoInit
//========//	
    public override int DoInit()
    {
		Title = "Discord";

		//if it's Checked
       if (GetBoolSetting("DeleteCookies"))
       {
		//Delete Cookies
		 Log("DeleteCookies - Checked");
         Driver.Manage().Cookies.DeleteAllCookies();
       } 

       //=============//
       //ALLIN-Success
       //=============//
       if (GetBoolSetting("ALLIN_Success"))
       {
		Log("ALLIN_Success");  
		ClaimSuccess(); 
        ad = true;    // if i do true - it report as succeed // only one time no multi and also required -> return GetWaitSetting();
	   } 
	   
       if (!GetBoolSetting("ALLIN_Success") )
	   {		  
        //Log(""); 	  	   
	   }
       //=============//
	   
   
        //Let Faucet Collector continue.
        return base.DoInit();
    }
//========//
//DoInit
//========//	

	
	
	
	
//==================//
//save Login Cookies 
//==================//
    public override bool IsLoggedIn()
    {
        // return ElementByXPath("//a[@href='/activity']") != null;       // <<< there is more tag name in multi languages (so it's not good)
        return ElementByXPath("//div[@class='container-3baos1']") != null;  //Unique 1 - container in the bottom of the profile photo of a user

        //return base.IsLoggedIn();
    }
//==================//
//save Login Cookies 
//==================//
	
	
	
	
//=============//
//BeforeLogin 
//=============//
 public override int BeforeLogin()
 {
 
 	 //var checks login or exit
     var ExitButton = ElementByXPath("//div[@class='container-3baos1']");  //Unique 1 - container in the bottom of the profile photo of a user
	 
	 //if i already Login - go to "bonus"	 
	 if (IsVisible(ExitButton))
	 {		 
      //ADFunction_String_URL_DiscordBotsTip(); //call to ADFunction_String_URL_DiscordBotsTip
      Wait();
	  CheckCloudFlare(); //call to CheckCloudFlare Function
	 }	
	 
   //This faucet has nothing to do here. We will let Faucet Collector handle it.
   return base.BeforeLogin();
 }
//=============//
//BeforeLogin 
//=============//


    //=============//
    //start DoLogin
    //=============//
    public override int DoLogin()
    {
				 
        //var checks login or exit
        var ExitButton = ElementByXPath("//div[@class='container-3baos1']");  //Unique 1 - container in the bottom of the profile photo of a user

        //if i NOT Login - go to Login Page
        if (!IsVisible(ExitButton))
        {
            //go to normal login
            GoToUrl("https://discordapp.com/login");

            var box_user = ElementByXPath("//input[@name='email']");
            SetText(box_user, GetSetting("Email"));

            var box_pass = ElementByXPath("//input[@name='password']");
            SetText(box_pass, GetPassword("Pass"));

            Wait(1);

            var ButtonLog = ElementByXPath("//button[@type='submit']");
            Click(ButtonLog);

        }
		
        Wait(4);
		
        if (ElementByXPath("//div[@class='g-recaptcha']") != null)
        {
            Captcha_All_Function(); //call
            
			Wait(3);
			
            var Button_2_Log = ElementByXPath("//button[@type='submit']");
            Click(Button_2_Log);
			
            Wait(3);
        }

        //This faucet has nothing to do here.    
        return base.DoLogin();
    }
    //=============//
    //start DoLogin
    //=============//



//==========//
//AfterLogin
//=========//
 public override int AfterLogin()
 {

 return base.AfterLogin();
 }
//==========//
//AfterLogin
//=========//
	

	
//=============//
//GetFaucetWaitTime
//=============//
 public override int GetFaucetWaitTime()
 {
	   
   if (ad)
   {
   ad=false; //solve the problem in start - after he return to script again
   return GetWaitSetting();	
   }
		
   //let Faucet Collector continue.
   return base.GetFaucetWaitTime();
 }
//=============//
//GetFaucetWaitTime
//=============//
	

    public override int BeforeSolveCaptcha()
    {
        //This faucet has nothing to do here. We will let Faucet Collector handle it.
        return base.BeforeSolveCaptcha();
    }

    public override int DoSolveCaptcha()
    {

        //This faucet has nothing to do here. We will let Faucet Collector handle it.
        return base.DoSolveCaptcha();
    }

    public override int AfterSolveCaptcha()
    {
        //This faucet has nothing to do here. We will let Faucet Collector handle it.
        return base.AfterSolveCaptcha();
    }
	
    public override int BeforeSolveFaucet()
    {

        //This faucet has nothing to do here. We will let Faucet Collector handle it.
        return base.BeforeSolveCaptcha();
    }
	
	

//=============//
//DoSolveFaucet
//=============//
    public override int DoSolveFaucet()
    {

        Discord_PopUp_General_Function(); //call to Check
		
        //================//
        //ProtectionSetEnglishLanguage//
        //================//
        if (GetBoolSetting("ProtectionSetEnglishLanguage"))
        {	
		 Log("ProtectionSetEnglishLanguage"); 
	     
		 Title = "Discord";	
		 GoToUrl("https://discordapp.com/activity");
		 Wait();	
		 Wait(12);
		 
		 var ActivityWord_EnglishLanguages = ElementByXPath("//div[contains(text(),'Friends')] | //div[contains(text(),'Library')] | //div[contains(text(),'Online')]") ; 

		 if (IsVisible(ActivityWord_EnglishLanguages)) // if "Activity" in  English languages visible 
         {	
		    Log("ActivityWord_EnglishLanguages - visible - already set - no need to do nothing");
		 }
		 
         if (!IsVisible(ActivityWord_EnglishLanguages)) // if "Activity" in  English languages not visible - so only then do stuff
         {	 
		    Log("ActivityWord_EnglishLanguages - Not set we do stuff");
			
            var AccountGearSettings = ElementByXPath("//button[3]/div[@class='contents-18-Yxp']");
            if (IsVisible(AccountGearSettings))
            {
		      Click(AccountGearSettings); 
		      Log("AccountGearSettings"); 
		    }
		 
	        Wait();
	        Wait(2); 
		 
            var LanguageTab = ElementByXPath("//div[@class='side-8zPYf6']/div[19]");
            if (IsVisible(LanguageTab))
            {
		      Click(LanguageTab); 
		      Log("LanguageTab"); 
		    }
		 
	        Wait();
	        Wait(2); 
		 
            var English_US_Language = ElementByXPath("//div[contains(@class,'2kBs7x') and contains(text(),'US')]") ;
            if (IsVisible(English_US_Language))
            {
		      Click(English_US_Language); 
		      Log("English_US_Language"); 
		    }
		 
	        Wait();
	        Wait(2); 
         } //end ActivityWord_EnglishLanguages
			
 
        } //end ProtectionSetEnglishLanguage
        //================//


        //===============================//
		//AutoWithdraw_BTC
        //==============================//
        if (GetBoolSetting("AutoWithdraw_BTC"))
        {
          Start_SearchBar_TipCC_Function(); //call
		
          //Withdraw BTC		
   		  var inputDiscord2MessageVar = ElementByXPath("//div[contains(@class,'inner')]/div[contains(@class,'textArea')]");      
	      if (IsVisible(inputDiscord2MessageVar))
          {
            Wait(2);
		  
            Actions Builder_1_Act = new Actions(Driver);			
            Builder_1_Act.MoveToElement(inputDiscord2MessageVar).Build().Perform(); 
		    Builder_1_Act.SendKeys(inputDiscord2MessageVar,"withdraw btc").Build().Perform();
            Log("Withdraw BTC");				

            Wait();

            Enter_SendKeys_General_Discord_Input_Function();
		   
            Wait(2);

   			var Error_No_Balance_Check = ElementByXPath("//div[contains(@id,'chat-messages-') and position()=last()-1]//div[contains(@class,'markup-2BOw-j') and contains(@style,'190')]//div[contains(@class,'grid-1nZz7S') and contains(., 'have any') or contains(., 'syntax is invalid') or contains(., 'not supported') ] ");      
	        if (IsVisible(Error_No_Balance_Check))
            {
                Log("You don't have any - BTC");				
			}
			
	        if (!IsVisible(Error_No_Balance_Check)) //if the Error - red line - You don't have any - NOT visible - do stuff
            {	
                Log("Available - BTC - balance");				
				
                Actions Builder_2_Act = new Actions(Driver);			
                Builder_2_Act.MoveToElement(inputDiscord2MessageVar).Build().Perform(); 
		        Builder_2_Act.SendKeys(inputDiscord2MessageVar, GetSetting("WalletAddress_BTC") ).Build().Perform();
                Log("set BTC WalletAddress");
				
                Wait();
			    
                Enter_SendKeys_General_Discord_Input_Function();
			    
                Wait(3);
			    
                Actions Builder_3_Act = new Actions(Driver);			
                Builder_3_Act.MoveToElement(inputDiscord2MessageVar).Build().Perform(); 
		        Builder_3_Act.SendKeys(inputDiscord2MessageVar, "all" ).Build().Perform();
                Log("BTC - type - all");
			    
                Wait();
			    
                Enter_SendKeys_General_Discord_Input_Function();
			    
                Wait(6);

			    var Minimom_Error_VAR = ElementByXPath("//div[contains(@id,'chat-messages-') and position()=last()-1 and contains(., 'minimum for')]");
                var Fee_Low_VAR = ElementByXPath("//div[contains(@id,'chat-messages-') and position()=last()-1]//div[contains(@class,'embedFields-2IPs5Z') and position()=last()-1 ]/div[3]/div[2 and contains(., '$0.0') or contains(., '$0.00')  or contains(., '$0.000') ]");
                
				if (!IsVisible(Fee_Low_VAR) || IsVisible(Minimom_Error_VAR) )
                {
                   Log("BTC - LimitFee -> NOT good - the 'fee' is 'HIGH' and above > 0.0$ or $0.00 or $0.000 ");
                }
			     		    
                if (IsVisible(Fee_Low_VAR) || !IsVisible(Minimom_Error_VAR) ) 
                {
                   Log("BTC - LimitFee <- good - the 'fee' is 'LOW' and under < 0.0$ or $0.00 or $0.000 ");	   
                   Wait(3);
                   Actions Builder_4_Act = new Actions(Driver);
                   Builder_4_Act.MoveToElement(inputDiscord2MessageVar).Build().Perform(); 
		           Builder_4_Act.SendKeys(inputDiscord2MessageVar, "yes" ).Build().Perform();	
                   Log("BTC - type - yes");
                   Wait();
                   Enter_SendKeys_General_Discord_Input_Function();
			       Log("Withdraw_BTC - success");
                   Wait(5);
                   if (GetBoolSetting("AutoDisableWithdrawAfterSuccessful_BTC"))
                   {
                     Log("AutoWithdraw_BTC - check - we Disable Withdraw After Successful");
                     SetSetting("AutoWithdraw_BTC", false);  //do off / uncheck  		  
                   }	
                   Wait(3);
                }
				
			}// end Error_No_Balance_Check - NOT visible				
				
          }// end inputDiscord2MessageVar

	    }// end AutoWithdraw_BTC
        //==============================//

	
        //===============================//
		//AutoWithdraw_DOGE
        //==============================//
        if (GetBoolSetting("AutoWithdraw_DOGE"))
        {
          Start_SearchBar_TipCC_Function(); //call
		
          //Withdraw DOGE		
   		  var inputDiscord2MessageVar = ElementByXPath("//div[contains(@class,'inner')]/div[contains(@class,'textArea')]");      
	      if (IsVisible(inputDiscord2MessageVar))
          {
            Wait(2);
		  
            Actions Builder_5_Act = new Actions(Driver);			
            Builder_5_Act.MoveToElement(inputDiscord2MessageVar).Build().Perform(); 
		    Builder_5_Act.SendKeys(inputDiscord2MessageVar,"withdraw DOGE").Build().Perform();
            Log("Withdraw DOGE");				
		  
            Wait();
		  
            Enter_SendKeys_General_Discord_Input_Function();
		  
            Wait(2);

   			var Error_No_Balance_Check = ElementByXPath("//div[contains(@id,'chat-messages-') and position()=last()-1]//div[contains(@class,'markup-2BOw-j') and contains(@style,'190')]//div[contains(@class,'grid-1nZz7S') and contains(., 'have any') or contains(., 'syntax is invalid') or contains(., 'not supported') ] ");      
	        if (IsVisible(Error_No_Balance_Check))
            {
                Log("You don't have any - DOGE");				
			}
			
	        if (!IsVisible(Error_No_Balance_Check)) //if the Error - red line - You don't have any - NOT visible - do stuff
            {	
                Log("Available - DOGE - balance");				
							  
                Actions Builder_6_Act = new Actions(Driver);			
                Builder_6_Act.MoveToElement(inputDiscord2MessageVar).Build().Perform(); 
		        Builder_6_Act.SendKeys(inputDiscord2MessageVar, GetSetting("WalletAddress_DOGE") ).Build().Perform();
                Log("set DOGE WalletAddress");
			    
                Wait();
			    
                Enter_SendKeys_General_Discord_Input_Function();
			    
                Wait(3);
			    
                Actions Builder_7_Act = new Actions(Driver);			
                Builder_7_Act.MoveToElement(inputDiscord2MessageVar).Build().Perform(); 
		        Builder_7_Act.SendKeys(inputDiscord2MessageVar, "all" ).Build().Perform();
                Log("DOGE - type - all");
			    
                Wait();
			    
                Enter_SendKeys_General_Discord_Input_Function();
			    
                Wait(6);
			     
			    var Minimom_Error_VAR = ElementByXPath("//div[contains(@id,'chat-messages-') and position()=last()-1 and contains(., 'minimum for')]");
                var Fee_Low_VAR = ElementByXPath("//div[contains(@id,'chat-messages-') and position()=last()-1]//div[contains(@class,'embedFields-2IPs5Z') and position()=last()-1 ]/div[3]/div[2 and contains(., '$0.0') or contains(., '$0.00')  or contains(., '$0.000') ]");
                
				if (!IsVisible(Fee_Low_VAR) || IsVisible(Minimom_Error_VAR) )
                {
                   Log("DOGE - LimitFee -> NOT good - the 'fee' is 'HIGH' and above > 0.0$ or $0.00 or $0.000 ");
                }
			     		    
                if (IsVisible(Fee_Low_VAR) || !IsVisible(Minimom_Error_VAR) ) 
                {
                   Log("DOGE - LimitFee <- good - the 'fee' is 'LOW' and under < 0.0$ or $0.00 or $0.000 ");		   
                   Wait(3);
                   Actions Builder_8_Act = new Actions(Driver);
                   Builder_8_Act.MoveToElement(inputDiscord2MessageVar).Build().Perform(); 
		           Builder_8_Act.SendKeys(inputDiscord2MessageVar, "yes" ).Build().Perform();			
                   Log("DOGE - type - yes");
				   Wait();				   
                   Enter_SendKeys_General_Discord_Input_Function();
			       Log("Withdraw_BTC - success");
                   Wait(5);
                   if (GetBoolSetting("AutoDisableWithdrawAfterSuccessful_DOGE"))
                   {
                     Log("AutoWithdraw_DOGE - check - we Disable Withdraw After Successful");
                     SetSetting("AutoWithdraw_DOGE", false);  //do off / uncheck  		  
                   }
                   Wait(3);
                }
				
			}// end Error_No_Balance_Check - NOT visible				
				
          }// end inputDiscord2MessageVar

	    }// end AutoWithdraw_DOGE
        //==============================//
	
	
        //================//
        //Discordtip_Main//
        //================//
        if (GetBoolSetting("Discordtip_Main_vote_OnOff"))
        {
           DiscordTipCC_Vote_Check_Function(); //call
        
		} //end Discordtip_Main_vote_OnOff
        //================//

        //================//
        //Discordtip_LaccsFaucet_vote_OnOff//
        //================//
        if (GetBoolSetting("Discordtip_LaccsFaucet_vote_OnOff"))
        {
           Title = "Discordtip";
           //ADFunction_String_URL_Discordtip_LaccsFaucet(); //call to Discordtip_LaccsFaucet 
		   GoToUrl("https://discordbots.org/bot/719287586849423420/vote"); //LaccsFaucet           
		   Wait();
		
 	       Log("Discordtip_LaccsFaucet - do vote first");			
           Tasks_Function(); //call
        
		} //end Discordtip_LaccsFaucet_vote_OnOff
        //================//

        //================//
        //Discordtip_Tippi_vote_OnOff//
        //================//
        if (GetBoolSetting("Discordtip_Tippi_vote_OnOff"))
        {
			
           TopSite_Function(); //call
		   
		   //first go to server
	       Title = "Discord";	
		   GoToUrl("https://discord.gg/kJJYWxQChK");
		   Wait();	
		   Wait(5);		
		   
           Driver.Navigate().Refresh();
		   Wait();	
		   
           Discord_PopUp_General_Function(); //call
		   
		   Wait(2);	
		   
           inviteServer_Elements_Function(); //call
		   
           Wait(3);		
			
           Tippi_Vote_Check_Function(); //call
        
		} //end Discordtip_Tippi_vote_OnOff
        //================//

        //=========================//
        //Discordtip_FaucetCollector//
        //=========================//
        if (GetBoolSetting("Discordtip_FaucetCollector_OnOff"))
        {
			
        TopSite_Function(); //call

		//first go to server
	    Title = "Discord";	
		GoToUrl("https://discord.gg/eCc6G3h");
		Wait();	
		Wait(5);		

        Driver.Navigate().Refresh();
		Wait();	
		
        Discord_PopUp_General_Function(); //call
		
		Wait(2);	
		
        inviteServer_Elements_Function(); //call
		
        Wait(3);
        Title = "#giveaways";		
        GoToUrl("https://discordapp.com/channels/406508543034916865/566695331295920138");
		Log("Discordtip_FaucetCollector: go to to claim in 'giveaways' channel | FaucetCollector ");
		Wait();
		Wait(8);

        Reaction_while_Function(); //call	  
		
        Wait(3);

     }	 //end Discordtip_FaucetCollector_OnOff
     //========================//


      //=========================//
      //Discordtip_Main_Airdrop_1_OnOff//
      //=========================//
      if (GetBoolSetting("Discordtip_Main_Airdrop_1_OnOff"))
      {		
  
        TopSite_Function(); //call

	    Title = "Discord";	
		GoToUrl("https://discord.gg/Rd2PgZy"); //Tip.cc server
		Wait();	
		Wait(5);		

        Driver.Navigate().Refresh();
		Wait();	
		
        Discord_PopUp_General_Function(); //call
		
		Wait(2);	
		
        inviteServer_Elements_Function(); //call
		
        Wait(3);
        Title = "#giveaways";		
        GoToUrl("https://discord.com/channels/617034883503620167/639195586070839316");
		Log("Discordtip_Main_Airdrop_1_OnOff: go to to claim in 'giveaways' channel | Discordtip ");
		Wait();
		Wait(8);

        Reaction_while_Function(); //call	  
		
        Wait(3);

     } //end Discordtip_Main_Airdrop_1_OnOff
     //========================//
	 

      //=========================//
      //Discordtip_Main_Airdrop_2_OnOff//
      //=========================//
      if (GetBoolSetting("Discordtip_Main_Airdrop_2_OnOff"))
      {		
  
        //TopSite_Function(); //call

	    Title = "Discord";	
		/*
		GoToUrl("https://discord.gg/Rd2PgZy"); //Tip.cc server
		Wait();	
		Wait(5);		

        Driver.Navigate().Refresh();
		Wait();	
        */
		
        Discord_PopUp_General_Function(); //call
		
		Wait(2);	
		
        inviteServer_Elements_Function(); //call

        Wait(3);
        Title = "#drops-and-begging";		
        GoToUrl("https://discord.com/channels/617034883503620167/699702250531979325");
		Log("Discordtip_Main_Airdrop_2_OnOff: go to to claim in 'drops-and-begging' channel | Discordtip ");
		Wait();
		Wait(8);

        Reaction_while_Function(); //call	  
		
        Wait(3);

     } //end Discordtip_Main_Airdrop_2_OnOff
     //========================//


      //=========================//
      //Discordtip_Main_Airdrop_3_OnOff//
      //=========================//
      if (GetBoolSetting("Discordtip_Main_Airdrop_3_OnOff"))
      {	
  
        //TopSite_Function(); //call

	    Title = "Discord";
        /*		
		GoToUrl("https://discord.gg/Rd2PgZy"); //Tip.cc server
		Wait();	
		Wait(5);		

        Driver.Navigate().Refresh();
		Wait();	
        */	
		
        Discord_PopUp_General_Function(); //call
		
		Wait(2);	
		
        inviteServer_Elements_Function(); //call

        Wait(3);
        Title = "#promos";		
        GoToUrl("https://discord.com/channels/617034883503620167/755024910023131167");
		Log("Discordtip_Main_Airdrop_3_OnOff: go to to claim in 'promos' channel | Discordtip ");
		Wait();
		Wait(8);

        Reaction_while_Function(); //call	  
		
        Wait(3);

     } //end Discordtip_Main_Airdrop_3_OnOff
     //========================//


      //=========================//
      //Discordtip_CryptoMoon_Airdrop_1_OnOff//
      //=========================//
      if (GetBoolSetting("Discordtip_CryptoMoon_Airdrop_1_OnOff"))
      {		
  
        TopSite_Function(); //call

	    Title = "Discord";	
		GoToUrl("https://discord.gg/k6K347V"); //Tip.cc server
		Wait();	
		Wait(5);		

        Driver.Navigate().Refresh();
		Wait();	
		
        Discord_PopUp_General_Function(); //call
		
		Wait(2);	
		
        inviteServer_Elements_Function(); //call

        Wait(3);
        Title = "#üí≤-raining-üèô";		
        GoToUrl("https://discord.com/channels/596834389778759690/683726808616927273");
		Log("Discordtip_CryptoMoon_Airdrop_1_OnOff: go to to claim in 'üí≤-raining-üèô' channel | Discordtip ");
		Wait();
		Wait(8);

        Reaction_while_Function(); //call	  
		
        Wait(3);

     } //end Discordtip_CryptoMoon_Airdrop_1_OnOff
     //========================//
	 

      //=========================//
      //Discordtip_CryptoMoon_Airdrop_2_OnOff//
      //=========================//
      if (GetBoolSetting("Discordtip_CryptoMoon_Airdrop_2_OnOff"))
      {		
  
        //TopSite_Function(); //call

	    Title = "Discord";	
/*
		GoToUrl("https://discord.gg/k6K347V"); //Tip.cc server
		Wait();	
		Wait(5);		

        Driver.Navigate().Refresh();
		Wait();	
*/		
        Discord_PopUp_General_Function(); //call
		
		Wait(2);	
		
        inviteServer_Elements_Function(); //call

        Wait(3);
        Title = "#üí≤-airdrops-üéâ";		
        GoToUrl("https://discord.com/channels/596834389778759690/683726957019791419");
		Log("Discordtip_CryptoMoon_Airdrop_2_OnOff: go to to claim in 'üí≤-airdrops-üéâ' channel | Discordtip ");
		Wait();
		Wait(8);

        Reaction_while_Function(); //call	  
		
        Wait(3);

     } //end Discordtip_CryptoMoon_Airdrop_2_OnOff
     //========================//
	 
	 
      //=========================//
      //Discordtip_CryptoMoon_Airdrop_3_OnOff//
      //=========================//
      if (GetBoolSetting("Discordtip_CryptoMoon_Airdrop_3_OnOff"))
      {		
  
        //TopSite_Function(); //call

	    Title = "Discord";
		
		/*
		GoToUrl("https://discord.gg/k6K347V"); //Tip.cc server
		Wait();	
		Wait(5);		

        Driver.Navigate().Refresh();
		Wait();	
        */	
		
        Discord_PopUp_General_Function(); //call
		
		Wait(2);	
		
        inviteServer_Elements_Function(); //call

        Wait(3);
        Title = "#tip-cc";		
        GoToUrl("https://discord.com/channels/596834389778759690/683731676995649700");
		Log("Discordtip_CryptoMoon_Airdrop_3_OnOff: go to to claim in 'tip-cc' channel | Discordtip ");
		Wait();
		Wait(8);

        Reaction_while_Function(); //call	  
		
        Wait(3);

     } //end Discordtip_CryptoMoon_Airdrop_3_OnOff
     //========================//


      //=========================//
      //Discordtip_CryptoMoon_Airdrop_4_OnOff//
      //=========================//
      if (GetBoolSetting("Discordtip_CryptoMoon_Airdrop_4_OnOff"))
      {		
  
        //TopSite_Function(); //call

	    Title = "Discord";	
		
        /*		
		GoToUrl("https://discord.gg/k6K347V"); //Tip.cc server
		Wait();	
		Wait(5);		

        Driver.Navigate().Refresh();
		Wait();	
        */		
		
        Discord_PopUp_General_Function(); //call
		
		Wait(2);	
		
        inviteServer_Elements_Function(); //call

        Wait(3);
        Title = "#üåöüåÇblack-rain-event‚òÇ";		
        GoToUrl("https://discord.com/channels/596834389778759690/683726909648928806");
		Log("Discordtip_CryptoMoon_Airdrop_4_OnOff: go to to claim in '#üåöüåÇblack-rain-event‚òÇ' channel | Discordtip ");
		Wait();
		Wait(8);

        Reaction_while_Function(); //call	  
		
        Wait(3);

     } //end Discordtip_CryptoMoon_Airdrop_4_OnOff
     //========================//


        //================//
        //Discordtip_CryptoMoon_Faucet_1_OnOff//
        //================//
        if (GetBoolSetting("Discordtip_CryptoMoon_Faucet_1_OnOff"))
        {
			
          //TopSite_Function(); //call
			
		  Title = "Discord";
		  
		  /*
          GoToUrl("https://discord.gg/k6K347V"); // my link never expire
		  Log("Discordtip_CryptoMoon_Faucet_1");
          Wait();
          Wait(2);
          inviteServer_Elements_Function(); //call
          Wait(2);
          */	
		  
		  Title = "#tipbot-faucet";		  
          GoToUrl("https://discord.com/channels/596834389778759690/691496374658662470");
		  Log("Discordtip_GridCoin - go to 'tipbot-faucet' channel ");	  
		  Wait(6);
		  SetText_CryptoMoon_Faucet_1_SendKeys_Way_Function();  //call to set text %get
		  Wait(2);
		  Enter_SendKeys_General_Discord_Input_Function(); //call to do enter	
		  Wait(3);
		  
        } //end Discordtip_CryptoMoon_Faucet_1_OnOff	
     //========================//
	 

        //================//
        //Discordtip_DreamTeam_Airdrop_1_OnOff//
        //================//
        if (GetBoolSetting("Discordtip_DreamTeam_Airdrop_1_OnOff"))
        {
			
          TopSite_Function(); //call
		  
		  Title = "Discord";
		  GoToUrl("https://discord.gg/TVyN4xF"); // my link never expire
		  Log("Discordtip_DreamTeam_Airdrop_1");
          Wait(2);
          inviteServer_Elements_Function(); //call
          Wait(2);		  
          Start_SearchBar_ServerCaptchaBot_Function(); //call
          Wait(2);
          Captcha_All_Function();
          Wait(2);
		  
          var ThankYou_General = ElementByXPath("//div[contains(@id,'chat-messages') and position()=last()-1]//div[contains(text(),'Thank you')]");
          var ServerIDName_Here_Successfully = ElementByXPath("//div[contains(@id,'chat-messages') and position()=last()-1]//strong[contains(text(),'DreamTeam')]");

		  if (IsVisible(ThankYou_General))
	      {		
			Log("ServerCaptchaBot - Thank you - general here ");	  
	  
		    if (IsVisible(ServerIDName_Here_Successfully))
	        {			  
			  Log("Discordtip_DreamTeam_Airdrop_1 - ServerCaptchaBot - Successfully Solved ");	
              Wait(2);	
			  
              TopSite_Function(); //call
			  
              Title = "#give-aways";		
              GoToUrl("https://discord.com/channels/458955603650281484/477928814299578369");
		      Log("Discordtip_DreamTeam_Airdrop_1 - go to 'give-aways' channel ");	  
		      Wait(6);

              Reaction_while_Function(); //call	  
		
              Wait(3);
			  
			} //end ServerIDName_Here_Successfully
			
		  } //end ThankYou_General

		  
        } //end Discordtip_DreamTeam_Airdrop_1_OnOff	
     //========================//
		

      //=========================//
      //Discordtip_Zero_Airdrop_1_OnOff//
      //=========================//
      if (GetBoolSetting("Discordtip_Zero_Airdrop_1_OnOff"))
      {		
  
        TopSite_Function(); //call

	    Title = "Discord";	
		GoToUrl("https://discord.gg/cnvbCTZ"); //Tip.cc server
		Wait();	
		Wait(5);		

        Driver.Navigate().Refresh();
		Wait();	
		
        Discord_PopUp_General_Function(); //call
		
		Wait(2);	
		
        inviteServer_Elements_Function(); //call

        Wait(3);
        Title = "#zero-tip-üí∏";		
        GoToUrl("https://discord.com/channels/473805904957931522/566973676608552972");
		Log("Discordtip_Zero_Airdrop_1_OnOff: go to to claim in 'zero-tip-üí∏' channel | Discordtip ");
		Wait();
		Wait(8);

        Reaction_while_Function(); //call	  
		
        Wait(3);

     } //end Discordtip_Zero_Airdrop_1_OnOff
     //========================//


        //================//
        //Discordtip_FreeCryptoWorld_OnOff//
        //================//
        if (GetBoolSetting("Discordtip_FreeCryptoWorld_OnOff"))
        {
			
          //TopSite_Function(); //call
		  
		  Title = "Discord";		
          GoToUrl("https://discord.gg/v2dWa4E"); // my link never expire
		  Log("Discordtip_FreeCryptoWorld");
          Wait(2);
          inviteServer_Elements_Function(); //call
          Wait(2);
		  
          var UnVerifiedStart = ElementByXPath("//div[contains(text(),'unverified')]");
          if (IsVisible(UnVerifiedStart))
	      {
			Title = "#unverified";		
            GoToUrl("https://discord.com/channels/503152242409340930/448301760730234880");
			Log("Discordtip_FreeCryptoWorld - do verify in your account in 'unverified' channel ");
			Wait(6);
			SetText_GridCoin_1_SendKeys_Way_Function();  //call to set text !agree
			Wait(2);
			Enter_SendKeys_General_Discord_Input_Function(); //call to do enter	
		    Wait(3);
          }
		  
		  Title = "#grid_grc";		
          GoToUrl("https://discord.com/channels/503152242409340930/584473130353950760");
		  Log("Discordtip_FreeCryptoWorld - go to 'wallet-bot' channel ");	  
		  Wait(6);
		  SetText_GridCoin_3_SendKeys_Way_Function();  //call to set text %get
		  Wait(2);
		  Enter_SendKeys_General_Discord_Input_Function(); //call to do enter	
		  Wait(3);

          var NeedToRegister = ElementByXPath("//div[contains(text(),'You do not have an account') and last() ]");
          if (IsVisible(NeedToRegister))
	      {
		    Log("Discordtip_FreeCryptoWorld - need to register ");	 
		  	Wait(6);
		    SetText_GridCoin_2_SendKeys_Way_Function();  //call to set text %new	  
		    Wait(2);
		    Enter_SendKeys_General_Discord_Input_Function(); //call to do enter	
		    Wait(6);
		    SetText_GridCoin_3_SendKeys_Way_Function();  //call to set text %get
		    Wait(2);
		    Enter_SendKeys_General_Discord_Input_Function(); //call to do enter	
		    Wait(3);
          }
		  
        } //end Discordtip_FreeCryptoWorld_OnOff	
     //========================//
	 

        //================//
        //Discordtip_GridCoin_OnOff//
        //================//
        if (GetBoolSetting("Discordtip_GridCoin_OnOff"))
        {
			
          //TopSite_Function(); //call
		  
		  Title = "Discord";		
          GoToUrl("https://discord.gg/QMJZnEx"); // my link never expire
		  Log("Discordtip_GridCoin");
          Wait(2);
          inviteServer_Elements_Function(); //call
          Wait(2);
		  
          var UnVerifiedStart = ElementByXPath("//div[contains(text(),'unverified')]");
          if (IsVisible(UnVerifiedStart))
	      {
			Title = "#unverified";		
            GoToUrl("https://discord.com/channels/211637812968161280/448301760730234880");
			Log("Discordtip_GridCoin - do verify in your account in 'unverified' channel ");
			Wait(6);
			SetText_GridCoin_1_SendKeys_Way_Function();  //call to set text !agree
			Wait(2);
			Enter_SendKeys_General_Discord_Input_Function(); //call to do enter	
		    Wait(3);
          }
		  
		  Title = "#wallet-bot";		
          GoToUrl("https://discord.com/channels/211637812968161280/424786671360409611");
		  Log("Discordtip_GridCoin - go to 'wallet-bot' channel ");	  
		  Wait(6);
		  SetText_GridCoin_3_SendKeys_Way_Function();  //call to set text %get
		  Wait(2);
		  Enter_SendKeys_General_Discord_Input_Function(); //call to do enter	
		  Wait(3);

          var NeedToRegister = ElementByXPath("//div[contains(text(),'You do not have an account') and last() ]");
          if (IsVisible(NeedToRegister))
	      {
		    Log("Discordtip_GridCoin - need to register ");	 
		  	Wait(6);
		    SetText_GridCoin_2_SendKeys_Way_Function();  //call to set text %new	  
		    Wait(2);
		    Enter_SendKeys_General_Discord_Input_Function(); //call to do enter	
		    Wait(6);
		    SetText_GridCoin_3_SendKeys_Way_Function();  //call to set text %get
		    Wait(2);
		    Enter_SendKeys_General_Discord_Input_Function(); //call to do enter	
		    Wait(3);
          }
		  
        } //end Discordtip_GridCoin_OnOff	
     //========================//
		
		

     //=========================//
     //Discordtip_LaccsFaucet_BTC//
     //=========================//
     if (GetBoolSetting("Discordtip_LaccsFaucet_BTC_OnOff"))
     {

	    Title = "Discord";	
		GoToUrl("https://discord.gg/Dx6eVgt"); // old server https://discord.gg/52zUZaM
		Wait();	
		Wait(5);		

        var InviteInvalidVAR = ElementByXPath("//div[contains(text(),'Invite Invalid')] | //div[contains(text(),'Invalid')]");
	    if (IsVisible(InviteInvalidVAR))
        {
		Log("Error - Invite Invalid apper - we return after FC time"); 	
        //return GetWaitSetting();
        }

        Driver.Navigate().Refresh();
		Wait();	
		
        Discord_PopUp_General_Function(); //call
		
		Wait(2);	
				
        inviteServer_Elements_Function(); //call

        Wait(3);
		
        while (true)
        {

		//GoToUrl("https://www.laccsprod.com/"); //go to first web		
        Wait();

		//=====//    
		//TOP //
		//=====//	

        TopSite_Function(); //call
		
        var WonPe_ButtonRobot = ElementByXPath("//*[@id='robot_button'] | //div[contains(text(),'robot')]"); //WonPe - robot button
	    if (IsVisible(WonPe_ButtonRobot))
        {
		Log("WonPe_ButtonRobot - TOP"); 	
        Click(WonPe_ButtonRobot);
        }
		
        /*		
		Wait();
        Wait(3);	

        //Notifications_Function(); //call if it apper

        var WonPe_SkipButton = ElementByXPath("//*[@id='skip_button']"); //WonPe - wait for - Continue 
		//if the start button not visible - in the first page
        while (!IsVisible(WonPe_SkipButton)) 
        {
        Wait();
        }

        if (IsVisible(WonPe_SkipButton))	
		{			
	    //Title = "LinkShrink";
	    Click(WonPe_SkipButton);
        Wait(1);	
		Title = "LinkShrink";	    
		Click(WonPe_SkipButton);
        }	

		
		Wait();		
		Wait(4);

		CheckForPopupsEnabled = true;
        CheckForPopups();

        //Notifications_Function(); //call if it apper

        var LinkShrink_GetLink = ElementByXPath("//div[@id='skip' and @style='display: none;']"); //LinkShrink - wait for - GetLink

		//if the start button not visible - in the first page
        while (IsVisible(LinkShrink_GetLink)) 
        { 
	
         Wait();

        }// end while	

		if (!IsVisible(LinkShrink_GetLink))	
		{	    
	    Title = "TopSite";	
		Log("LinkShrink - Click SKIP Continue");
		var LinkShrink_SkipButton = ElementByXPath("//a[@id='btd' and contains(text(),'Continue')]");   //div[@id='skip']
	    Click(LinkShrink_SkipButton);
        }	
		
		Wait();		
		Wait(4);
		
		CheckForPopupsEnabled = false;
        Driver.Navigate().Refresh();
		//=========//


		//=================//    
		//LaccsFaucetBTC //
		//===============//	
		
        Title = "Won.pe";
		GoToUrl("https://won.pe/LaccsFaucetBTC2"); //go to BTC
		Log("WonPe - Discordtip_LaccsFaucet_BTC"); 
        Wait();
        Wait(3);
		
        var WonPe_ButtonRobot_BTC = ElementByXPath("//*[@id='robot_button'] | //div[contains(text(),'robot')]"); //WonPe - robot button
	    if (IsVisible(WonPe_ButtonRobot_BTC))
        {
		Log("Discordtip_LaccsFaucet_BTC: WonPe_ButtonRobot_BTC"); 	
        Click(WonPe_ButtonRobot_BTC);
        }
		
		Wait();
        Wait(3);		

        //Notifications_Function(); //call if it apper

        var WonPe_SkipButton_BTC = ElementByXPath("//*[@id='skip_button']"); //WonPe - wait for - Continue 

		//if the start button not visible - in the first page
        while (!IsVisible(WonPe_SkipButton_BTC)) 
        {
        Wait();
        }

        if (IsVisible(WonPe_SkipButton_BTC))	
		{			
	    //Title = "LinkShrink";
	    Click(WonPe_SkipButton_BTC);
		Wait(1);	
		Title = "LinkShrink";	
		Click(WonPe_SkipButton_BTC);
        }	
		
		Wait();		
		Wait(4);

		CheckForPopupsEnabled = true;
        CheckForPopups();

        //Notifications_Function(); //call if it apper

        var LinkShrink_2_GetLink = ElementByXPath("//div[@id='skip' and @style='display: none;']"); //LinkShrink - wait for - GetLink

		//if the start button not visible - in the first page
        while (IsVisible(LinkShrink_2_GetLink)) 
        { 
	
         Wait();
	
        }// end while

		if (!IsVisible(LinkShrink_2_GetLink))	
		{	
	    Title = "BTC";	
		Log("LinkShrink - Click SKIP Continue");
		var LinkShrink_SkipButton = ElementByXPath("//a[@id='btd' and contains(text(),'Continue')]");   //div[@id='skip']
	    Click(LinkShrink_SkipButton);
        }		

		Wait();		
		Wait(4);

		CheckForPopupsEnabled = false;
        Driver.Navigate().Refresh();

		//=========//
        */	

        //now go to server BTC - to claim
        Wait();
		Title = "Discord";	
        CheckForPopupsEnabled = true;
        CheckForPopups();
        CheckForPopupsEnabled = false;
        Driver.Navigate().Refresh();		
        //Driver.SwitchTo().Window(Driver.WindowHandles[0]);
        //Driver.Close();	
		 
	    var inviteServer2Button = ElementByXPath("//button[@type='button']/div"); //[text()='Accept Invite']
	    if (IsVisible(inviteServer2Button))
        {
        Click(inviteServer2Button);
		Log("Discordtip_LaccsFaucet_BTC: join to second server | LaccsFaucet - BTC "); 	        
		}
		
		Wait();
        Wait(5);
        Title = "#commands";		
        GoToUrl("https://discord.com/channels/749393412238868571/749397869202505858"); //old channel https://discordapp.com/channels/529052821614493698/621344688393289728
		Log("Discordtip_LaccsFaucet_BTC: go to to claim in 'commands' channel  | LaccsFaucet - BTC "); 	
		Wait();
		Wait(6);
		
        //TextCommand            
        var TextCommand = ElementByXPath("//div[contains(@class,'inner')]/div[contains(@class,'textArea')]");
	        
        if (IsVisible(TextCommand))
        {

			Wait(2);
			SetText_1_Laccs_SendKeys_Way_Function(); //call to SetText SendKeys Way
            Enter_SendKeys_General_Discord_Input_Function(); //call to Enter_SendKeys_General_Discord_Input_Function

			SetText_2_Laccs_SendKeys_Way_Function(); //call to SetText SendKeys Way
		    Wait(2);
            Enter_SendKeys_General_Discord_Input_Function(); //call to Enter_SendKeys_General_Discord_Input_Function
			
            ClaimSuccess(); //Marks the claim as a success
			
        } //end TextCommand visible
		

	    if (!IsVisible(TextCommand)) 
        {
		 Log("Error - TextCommand input not apper - we return after FC time"); 	
         return GetWaitSetting();	
        } //end TextCommand NOT visible
	
		/*

        Scroll_Function(); //call to scroll down
		
		Wait(3);
		
		var ReactionButton_Clean = ElementByXPath("//div[contains(@class,'reactionInner') and @aria-pressed='false' ]//img[contains(@src,'assets/b052a4bef57')]");
        
		if (!IsVisible(ReactionButton_Clean)) 
        {
         Log("Reaction - already claimed full - OR - problem with button");
         Notification("Reaction - already claimed full - OR - problem with button");
        } 
 	    
		if (IsVisible(ReactionButton_Clean))
        {
		Log("Reaction is now Clean - call to function - to click"); 
		Reaction_Function(); //call to Reaction_Function
		}

        Wait(2);

		*/

		break; //after break the while

        }// end while - true
		
        Wait();
        Wait(3);

   } //end Discordtip_LaccsFaucet_BTC_OnOff


		//ad = true;  //succeed
        return GetWaitSetting();
		
        //This faucet has nothing to do here. We will let Faucet Collector handle it.
        return base.DoSolveFaucet();
 }
 
//============//
//DoSolveFaucet
//============//


	
    public override int AfterSolveFaucet()
    {
        //This faucet has nothing to do here. We will let Faucet Collector handle it.
        return base.AfterSolveFaucet();
    }



    /// <summary>
    /// This method gets called in the end after the BeforeSolveFaucet/DoSolveFaucet and AfterSolveFaucet methods were done.
    /// The base.CheckFaucetResult will try to find a visible element on the page using the XPath from SuccessXPath and FailXPath (see the Start method)
    /// These properties should contain XPath expressions to find certain elements on the page.
    /// For example if it finds one of the elements from the SuccessXPath, and it is visible, then it will flag the claim attempt as a success.
    /// Or if it finds one of the elements from the FailXPath, and it is visible, then it will flag the claim attempt as a failure.
    /// </summary>
    public override int CheckFaucetResult()
    {

        //This faucet has nothing to do here. We will let Faucet Collector handle it.
        return base.CheckFaucetResult();
    }





  //=================//
  //Start_SearchBar_TipCC_Function
  //=================//
  public int Start_SearchBar_TipCC_Function()
  {
       Title = "Discord";	
       GoToUrl("https://discordapp.com/activity");
       Wait();
       Driver.Navigate().Refresh();
       Wait();
       Driver.Navigate().Refresh();
       Wait();
       Wait(5);
       var SearchBarMainVar = ElementByXPath("//div[contains(@class,'searchBar')]"); //button[contains(text(),'Find or start')]
       Click(SearchBarMainVar);
       Wait();
       var SearchBar2Var = ElementByXPath("//input[@class='input-2VB9rf'] | //div[3]/div/div/input");		
       SetText(SearchBar2Var,TipCC_NameID_String); // set text & find @Discordtip#2087
       Wait();
	   
       Enter_SearchBar_Start_Function();
	   
       Wait();		
	   
       Enter_SendKeys_General_Discord_Input_Function();
	   
       Wait(4);

     return 0; 
  } //end Start_SearchBar_TipCC_Function
  //====================//
 
 
 
   //=================//
  //Start_SearchBar_ServerCaptchaBot_Function
  //=================//
  private int Start_SearchBar_ServerCaptchaBot_Function()
  {
       Title = "Discord";	
       GoToUrl("https://discordapp.com/activity");
       Wait();
       Driver.Navigate().Refresh();
       Wait();
       Driver.Navigate().Refresh();
       Wait();
       Wait(5);
       var SearchBarMainVar = ElementByXPath("//div[contains(@class,'searchBar')]"); //button[contains(text(),'Find or start')]
       Click(SearchBarMainVar);
       Wait();
       var SearchBar2Var = ElementByXPath("//input[@class='input-2VB9rf'] | //div[3]/div/div/input");		
       SetText(SearchBar2Var,ServerCaptchaBot_NameID_String); // set text & find @Discordtip#2087
       Wait();
	   
       Enter_SearchBar_Start_Function();
	   
       Wait();		
	   
       Enter_SendKeys_General_Discord_Input_Function();
	   
       Wait(4);

     return 0;
	 
  } //end Start_SearchBar_ServerCaptchaBot_Function
  //====================//
 
 
   //=================//
  //inviteServer_Elements_Function
  //=================//
  public int inviteServer_Elements_Function()
  {
	    var inviteServerORContinueToDiscord = ElementByXPath("//button[contains(@class,'lookFilled')]/div | //div[contains(text(),'Continue')] | //div[contains(text(),'Accept')] "); 

	    if (IsVisible(inviteServerORContinueToDiscord))
        {
		Log("join or Continue to Discord Server"); 	
        Click(inviteServerORContinueToDiscord);
		Wait(4);
        }
		  
   return 0;
		
  } //end inviteServer_Elements_Function
   //=================//


      //=================//
      //Enter_SendKeys_General_Discord_Input_Function
      //=================//	
      public int Enter_SendKeys_General_Discord_Input_Function()
      {
         var TextCommand = ElementByXPath("//div[contains(@class,'inner')]/div[contains(@class,'textArea')]");
	     if (IsVisible(TextCommand))
         {
		   //Enter Keyboard
           Log("Enter Keyboard");
           Actions Builder_9_Act = new Actions(Driver);
           Builder_9_Act.MoveToElement(TextCommand).Build().Perform(); 
           Wait(3);
           Builder_9_Act.SendKeys(Keys.Enter).Build().Perform(); 
		 }
		 return 0;
      }
      //=================//	


      //=================//
      //SetText_GridCoin_1_SendKeys_Way_Function
      //=================//	
      public int SetText_GridCoin_1_SendKeys_Way_Function()
      {
         var TextCommand = ElementByXPath("//div[contains(@class,'inner')]/div[contains(@class,'textArea')]");
	     if (IsVisible(TextCommand))
         {
		   //SetText Keyboard
           Log("TextCommand - SetText_GridCoin_1");
           Actions Builder_10_Act = new Actions(Driver);
           Builder_10_Act.MoveToElement(TextCommand).Build().Perform(); 
           Wait(3);
           Builder_10_Act.SendKeys(TextCommand, "!agree").Build().Perform();
		 }
		 return 0;
      }
      //=================//		  

      //=================//
      //SetText_GridCoin_2_SendKeys_Way_Function
      //=================//	
      public int SetText_GridCoin_2_SendKeys_Way_Function()
      {
         var TextCommand = ElementByXPath("//div[contains(@class,'inner')]/div[contains(@class,'textArea')]");
	     if (IsVisible(TextCommand))
         {
		  //SetText Keyboard
          Log("TextCommand - SetText_GridCoin_2");
          Actions Builder_11_Act = new Actions(Driver);
          Builder_11_Act.MoveToElement(TextCommand).Build().Perform(); 
          Wait(3);
          Builder_11_Act.SendKeys(TextCommand, "%new").Build().Perform();	
		 }
		 return 0;
      }
      //=================//	

      //=================//
      //SetText_GridCoin_3_SendKeys_Way_Function
      //=================//	
      public int SetText_GridCoin_3_SendKeys_Way_Function()
      {
         var TextCommand = ElementByXPath("//div[contains(@class,'inner')]/div[contains(@class,'textArea')]");
	     if (IsVisible(TextCommand))
         {
	       //SetText Keyboard
           Log("TextCommand - SetText_GridCoin_3");
           Actions Builder_12_Act = new Actions(Driver);
           Builder_12_Act.MoveToElement(TextCommand).Build().Perform(); 
           Wait(3);
           Builder_12_Act.SendKeys(TextCommand, "%get").Build().Perform();
		 }
		 
		 return 0;
      }
      //=================//	
	

      //=================//
      //SetText_CryptoMoon_Faucet_1_SendKeys_Way_Function
      //=================//	
      public int SetText_CryptoMoon_Faucet_1_SendKeys_Way_Function()
      {
         var TextCommand = ElementByXPath("//div[contains(@class,'inner')]/div[contains(@class,'textArea')]");
	     if (IsVisible(TextCommand))
         {
	       //SetText Keyboard
           Log("TextCommand - SetText_CryptoMoon_Faucet_1");
           Actions Builder_13_Act = new Actions(Driver);
           Builder_13_Act.MoveToElement(TextCommand).Build().Perform(); 
           Wait(3);
           Builder_13_Act.SendKeys(TextCommand, ".take").Build().Perform();
		 }
		 
		 return 0;
      }
      //=================//	
	
      //=================//
      //SetText_1_Laccs_SendKeys_Way_Function
      //=================//	
      public int SetText_1_Laccs_SendKeys_Way_Function()
      {
         var TextCommand = ElementByXPath("//div[contains(@class,'inner')]/div[contains(@class,'textArea')]");
	     if (IsVisible(TextCommand))
         {
		   //SetText Keyboard
           Log("TextCommand - SetText_1_Laccs");
           Actions Builder_14_Act = new Actions(Driver);
           Builder_14_Act.MoveToElement(TextCommand).Build().Perform(); 
           Wait(3);
           Builder_14_Act.SendKeys(TextCommand, GetSetting("Command_1") ).Build().Perform(); 
		 }
		 return 0;
      }
      //=================//	
	  
	  
      //=================//
      //SetText_2_Laccs_SendKeys_Way_Function
      //=================//	
      public int SetText_2_Laccs_SendKeys_Way_Function()
      {
         var TextCommand = ElementByXPath("//div[contains(@class,'inner')]/div[contains(@class,'textArea')]");
	     if (IsVisible(TextCommand))
         {
		   //SetText Keyboard
           Log("TextCommand - SetText_2_Laccs");
           Actions Builder_15_Act = new Actions(Driver);
           Builder_15_Act.MoveToElement(TextCommand).Build().Perform(); 
           Wait(3);
           Builder_15_Act.SendKeys(TextCommand, GetSetting("Command_2") ).Build().Perform();
		 }
		 
		 return 0;
      }
      //=================//	
	
	
	
      //=================//
      //Enter_SearchBar_Start_Function
      //=================//	
      public int Enter_SearchBar_Start_Function()
      {
        var ElementToEnter = ElementByClass("input-2VB9rf");
	    if (IsVisible(ElementToEnter))
        {
        Actions Builder_16_Act = new Actions(Driver);
        Builder_16_Act.MoveToElement(ElementToEnter).Build().Perform(); 
        Wait(3);
        Builder_16_Act.SendKeys(Keys.Enter).Build().Perform(); 
		}

		 return 0;
      }
      //=================//	
	

	
  //=================//
  //CheckCloudFlare Function
  //=================//	
 public int CheckCloudFlare()
    {
	    Log("CheckCloudFlare");
		
        int Count = 0;
        while (IsVisible(ElementByXPath("//h1[@data-translate='challenge_headline']")) && Count<5)
        { 
            int result = DoSolveCaptcha();
            if (result > 0)
            {
                Count++;
                continue;
            }

            RecaptchaUtility BypassRecaptcha = new RecaptchaUtility(this);
            BypassRecaptcha.DoSolve();
            Wait(2);
            Count++;
        }
		 return 0;
    }
  //=================//


      //=================//
      //NoThanks_Function
      //=================//
      public int NoThanks_Function()
      {
		  
        var NoThanks_VAR = ElementByXPath("//a[contains(text(),'No t')]");
        if (IsVisible(NoThanks_VAR))
        {	
		Log("NoThanks_VAR");
		Click(NoThanks_VAR);
		Wait(2);
		}
		
        return 0;
      } //end NoThanks_Function
    //====================//
	

   //=================//
  //Tippi_Vote_Check_Function
  //=================//
  public int Tippi_Vote_Check_Function()
  {
		  Title = "#vote-bounty";	
		  GoToUrl("https://discord.com/channels/569537504080822312/569537639213039626"); //channel
		  Wait();	
		  Wait(4);
		  
          Scroll_Function(); //call to scroll down
		  
		  Wait(3);	
		  
   		  var Tippi_Vote_Check_VAR = ElementByXPath(" //div[contains(@class,'mentioned') and contains(., 'Today') ] [last()] ");      
	      if (Tippi_Vote_Check_VAR !=null) //Visible
          {
			  Log("Tippi - Vote - you Already Vote Today - try Tomorrow");	  
		  }
		  
		  if (Tippi_Vote_Check_VAR ==null) //NOT Visible
          {
			  Log("Tippi - Vote - go to claim ");
			  
              Title = "Discordtip";
              //ADFunction_String_URL_Discordtip_Tippi(); //call to Discordtip_Tippi
		      GoToUrl("https://discordbots.org/bot/569955063519510549/vote"); //Tippi
		      Wait();
		      
 	          Log("Discordtip_Tippi - do vote first");			
              Tasks_Function(); //call
		  }	  
		  
		  
        return 0;
		
  } //end Tippi_Vote_Check_Function
   //=================//
   
   
  //=================//
  //DiscordTipCC_Vote_Check_Function
  //=================//
  public int DiscordTipCC_Vote_Check_Function()
  {
	  
          Start_SearchBar_TipCC_Function(); //call
		  
		  Wait(2);			  
		  
          Scroll_Function(); //call to scroll down
		  
		  Wait(3);	
		  
   		  var DiscordTipCC_Vote_Check_VAR = ElementByXPath(" //div[contains(@class, 'scrollerInner-') ]//div[contains(., 'Today at') and contains(., 'Thank you for vot') ] ");      
	      if (DiscordTipCC_Vote_Check_VAR !=null) //Visible
          {
			  Log("DiscordTipCC - Vote - you Already Vote Today - try Tomorrow");	  
		  }
		  
		  if (DiscordTipCC_Vote_Check_VAR ==null) //NOT Visible
          {
			  Log("DiscordTipCC - Vote - go to claim ");
			  
              Title = "Discordtip";
              //ADFunction_String_URL_DiscordBotsTip(); //call to Discordtip main 
		      GoToUrl("https://discordbots.org/bot/617037497574359050/vote"); //tip.cc
              Wait();
			  
			  Log("Discordtip_Main - do vote");			
              Tasks_Function(); //call
		  }	  
		  
		  
        return 0;
		
  } //end DiscordTipCC_Vote_Check_Function
   //=================//  



      //=================//
      //Tasks_Function
      //=================//
      public int Tasks_Function()
      {

	        CheckCloudFlare(); //call to CheckCloudFlare Function
            Wait(6);
			
            var PopUp_1_Login = ElementByXPath("//div[@class='modal is-active']"); //("//div[@class='modal is-active']")		
            if (IsVisible(PopUp_1_Login))
            {
				Log("PopUp_1_Login visible - click on DiscordBots LoginButton");
                var DiscordBotsLogin_1_Button = ElementByXPath("//a[contains(text(),'Login')]"); //("//a[contains(@href,'login')]")
                Click(DiscordBotsLogin_1_Button);
				Wait();
            }

            Wait(5);

			
            var Authorize_1_Button = ElementByXPath("//button/div[contains(text(),'Authorize')]");   //("//button[@class='primary'] [text()='Authorize']")

            if (IsVisible(Authorize_1_Button))
            {
				
				NoThanks_Function(); //call
				
                Click(Authorize_1_Button);
                Log("AfterLogin: Click Authorize_1_Button");
            }

            if (!IsVisible(Authorize_1_Button))
            {
				NoThanks_Function(); //call

                Log("AfterLogin: Success - We Already Login with Authorize_1_Button");
            }

            Wait(5);

            //vote button
            var VoteButton = ElementByXPath("//input[@id='votingvoted']");
            if (IsVisible(VoteButton))
            {
                Log("VoteButton - 1");
                Click(VoteButton);
            }
			
            Wait(3);
			
		    invisible_Recaptcha_Function(); //call to check
			
/*			
            var PopUp_2_Login = ElementByXPath("//div[@class='modal is-active']"); //("//div[@class='modal is-active']")		
            if (IsVisible(PopUp_2_Login))
            {
				Log("PopUp_2_Login visible - click on DiscordBots LoginButton");
                var DiscordBotsLogin_2_Button = ElementByXPath("//strong[contains(text(),'Login')]"); //("//a[contains(@href,'login')]")
                Click(DiscordBotsLogin_2_Button);
				Wait();
            }

            Wait(4);

		    invisible_Recaptcha_Function(); //call to check
			
            Wait();
	
            var Authorize_2_Button = ElementByXPath("//button/div[contains(text(),'Authorize')]");   //("//button[@class='primary'] [text()='Authorize']")

            if (IsVisible(Authorize_2_Button))
            {
                Click(Authorize_2_Button);
                Log("AfterLogin: Click Authorize_2_Button");
            }

            if (!IsVisible(Authorize_2_Button))
            {
                Log("AfterLogin: Success - We Already Login with Authorize_2_Button");
            }

            Wait(2);

            //vote button
            if (IsVisible(VoteButton))
            {
                Log("VoteButton - 2");
                Click(VoteButton);
            }
			
            Wait(3);

		    invisible_Recaptcha_Function(); //call to check
*/
            Wait(3);

            var ThanksMessage = ElementByXPath("//div[@id='reminder']/h2[text()='Thanks for voting!']");
            var AlreadyVoted = ElementByXPath("//input[@id='votingvoted' and contains(@value, 'You already voted') ]");

	        if (ThanksMessage !=null) //Visible
            {
				
                Log("FaucetClaim:" + ThanksMessage.Text);				
				
				if (GetBoolSetting("All_AirDrop_Success"))
				{
		         Log(" ThanksMessage - All_AirDrop_Success ");  
	             Notification("ThanksMessage - All_AirDrop_Success");	
		    	 ClaimSuccess();
                 return GetWaitSetting();		 
				}
				  
                if (!GetBoolSetting("Discordtip_FaucetCollector_OnOff") && !GetBoolSetting("Discordtip_Main_Airdrop_1_OnOff")  && !GetBoolSetting("Discordtip_Main_Airdrop_2_OnOff") && !GetBoolSetting("Discordtip_Main_Airdrop_3_OnOff") && !GetBoolSetting("Discordtip_LaccsFaucet_BTC_OnOff") && !GetBoolSetting("Discordtip_GridCoin_OnOff") )
                {
	             Notification("ThanksMessage' - appear && the all AirDrop from Discordtip are disabled");	
		         Log(" 'ThanksMessage' - appear && the all AirDrop from Discordtip are disabled ");  
		         ClaimSuccess();
                }

            }

	        if (AlreadyVoted !=null) //Visible
            {
                Log("FaucetClaim: Already Voted");
				
				if (GetBoolSetting("All_AirDrop_Success"))
				{
	             Notification("AlreadyVoted - All_AirDrop_Success");	
		         Log("AlreadyVoted - All_AirDrop_Success ");  
		    	 ClaimSuccess(); 
                 return GetWaitSetting();	
				}
				
                if (!GetBoolSetting("Discordtip_FaucetCollector_OnOff") && !GetBoolSetting("Discordtip_Main_Airdrop_1_OnOff")  && !GetBoolSetting("Discordtip_Main_Airdrop_2_OnOff") && !GetBoolSetting("Discordtip_Main_Airdrop_3_OnOff") && !GetBoolSetting("Discordtip_LaccsFaucet_BTC_OnOff") && !GetBoolSetting("Discordtip_GridCoin_OnOff") )
                {
	             Notification(" 'AlreadyVoted' - appear && the all AirDrop from Discordtip are disabled ");	
		         Log(" 'AlreadyVoted' - appear && the all AirDrop from Discordtip are disabled ");  
		    	 ClaimSuccess();
                }
             
            }
			
        return 0;
      } //end Tasks_Function
    //====================//
	
	
  //=================//
  //Dwindly_Protection_Function
  //=================//
  public int Dwindly_Protection_Function()
  {
	  
        //Dwindly_Protection//		
		var Dwindly_Protection = ElementByXPath("//*[@id='pause']/div[contains(text(),'wait')]"); //if the 5 sec stuck click on the span text
        var SecToWait = DateTime.Now.AddSeconds(50);
        
        var Dwindly_GetLink = ElementByXPath("//*[@id='btd']"); //Dwindly - wait for - GetLink

		//if the start button not visible - in the first page
        while (!IsVisible(Dwindly_GetLink) && IsVisible(Dwindly_Protection)) 
        { 
	
         Wait();

        //Dwindly_Protection//	  
        if (DateTime.Now > SecToWait) //if the time above 20 sec 
        {
	  	Log("Dwindly_Protection - we here"); 
        Click(Dwindly_Protection); 
		Driver.Navigate().Refresh();
        }	
	
        }// end while

	
    return 0;
  } //end Dwindly_Protection_Function

  //====================//
  
  
  
   //=================//
  //Scroll_Function
  //=================//
  public int Scroll_Function()
  {
		  var MarkAsRead = ElementByXPath("//button[contains(@type,'button') and contains(text(),'Mark') ]"); 
		  if (IsVisible(MarkAsRead))
          {
           Log("MarkAsRead - click on MarkAsRead + scroll to bottom");				  
		   Click(MarkAsRead);
		   Wait(2);
		   ExecuteScript("window.scrollBy(0,1000)"); //Scroll Down
		   Wait(2);
		  }  
		  
        return 0;
		
  } //end Scroll_Function
   //=================//
   
  
  //=================//
  //Reaction_while_Function
  //=================//
  public int Reaction_while_Function()
  {
	  
         var TimeToWaitForBreak = DateTime.Now.AddSeconds(360);//DateTime.Now.AddSeconds
         while (true)
         {	
	 
		   Log("Time left to break is " + TimeToWaitForBreak);
	 
		   Wait(2);	   
		   
           Scroll_Function(); //call to scroll down
		   
		   Wait(2);
		
		   var ReactionButton_Clean = ElementByXPath("//div[contains(@class,'container-1ov-mD') and contains(., 'airdrop appear') and contains(., 'Ends') ]//div[contains(@class,'reactionInner') and @aria-pressed='false' ]//img[contains(@src,'assets/b052a4bef57')]");
           
		   if (!IsVisible(ReactionButton_Clean)) 
           {
            Log("Reaction - already claimed full OR Ended");
            Notification("Reaction - already claimed full");
		    break; //after break the while
           } 
 	       
		   if (IsVisible(ReactionButton_Clean))
           {			   
		   Log("Reaction is now Clean - call to function - to click");
		   Wait(2);	 
  		   int Count;			     		   
		   var ReactionButton_2_Clean = ElementsByXPath("//div[contains(@class,'container-1ov-mD') and contains(., 'airdrop appear') and contains(., 'Ends') ]//div[contains(@class,'reactionInner') and @aria-pressed='false' ]//img[contains(@src,'assets/b052a4bef57')]"); //Elements
		   Log("the amount of Reactions to do now is " + ReactionButton_2_Clean.Count);		   
		   Reaction_Function(); //call to Reaction_Function
		   }
		   
           Wait(3);

           if (DateTime.Now > TimeToWaitForBreak) //if the time above 65 sec 
           {
           Log("Reaction - break - TimeToWaitForBreak");
           break; //break the wait loop
           }	
		   
         } //end while - true
		
		
     return 0;
	 
  } //end Reaction_while_Function
  //====================//
  
  
  
  //=================//
  //Reaction_Function
  //=================//
  public int Reaction_Function()
  {

		  var InputTextToCheckBefore = ElementByXPath("//div[contains(text(),'You do not have permission')]"); 
		  if (IsVisible(InputTextToCheckBefore)) //if the input Lock
          {
		   //do not do anything
           Log("You do not have permission to send messages in this channel.");		   
		  } 
		  
		  Wait(3);

          var Reaction_General_apper = ElementByXPath("//div[contains(@class,'embedTitle') and contains(text(),'airdrop')]");
          var ReactionButton_Clean = ElementByXPath("//div[contains(@class,'container-1ov-mD') and contains(., 'airdrop appear') and contains(., 'Ends') ]//div[contains(@class,'reactionInner') and @aria-pressed='false' ]//img[contains(@src,'assets/b052a4bef57')]");

          if (!IsVisible(Reaction_General_apper)) //if not apper at all "An airdrop appears"
          {
           Log("Reaction - airdrop not exist at all right now");
	       Notification("Reaction - airdrop not exist at all right now");
          }  
  
          if (IsVisible(ReactionButton_Clean))
          {
           Log("ReactionButton_Clean - visible - we click on it");
		   Wait(3);
		   Click(ReactionButton_Clean);
		   Wait(2);
		   Log("Reaction: Click On Reaction - done"); 
	       Notification("Reaction: Click On Reaction - done");	
		   ClaimSuccess(); //Marks the claim as a success
		   Wait();
          } 
   
        return 0;
  } //end Reaction_Function

  //====================//
   
  
  //====================//
  //Notifications_Function
  //====================//
  public int Notifications_Function()
  {
        var RingNotifications = ElementByXPath("//img[@alt='ring']");

        if (IsVisible(RingNotifications))
        {
			
     	   Wait();
			
           var iframeMainTag = ElementByXPath("//iframe[contains(@style,'z-index: 2147483647;')]"); //first need to dive - into the main tag <iframe>
		   Driver.SwitchTo().Frame(iframeMainTag); //after active & switch to "iframe"
		  
     	   Wait();
		   
           //click to allow notifications
           var AdFlyPushNotificationsButton = ElementByXPath("//button[contains(text(),'Allow')]");
	       Click(AdFlyPushNotificationsButton);
		   Log("NF - click Allow");
  
     	   Wait();

           Driver.SwitchTo().DefaultContent(); //go back to default content in <html>
		   
	    }
        return 0;
  } //end Notifications_Function

  //====================//
  

  //====================//
  //ADFunction_String_URL_Discordtip_LaccsFaucet
  //====================//
  private bool ADFunction_String_URL_Discordtip_LaccsFaucet()
  {

        string Channel_Base_Url_String = "https://discordbots.org/bot/";
		
		//Discordtip_LaccsFaucet_Main_ID
        var Discordtip_LaccsFaucet_Main_ID_Var = GetSetting("Discordtip_LaccsFaucet_Main_ID");
		string Discordtip_LaccsFaucet_Main_ID_String = Discordtip_LaccsFaucet_Main_ID_Var;
		
		//Custom_Bot_ID
        var Input_Custom_Bot_ID_Var = GetSetting("Input_Custom_Bot_ID_Setting");
		string Input_Custom_Bot_ID_String = Input_Custom_Bot_ID_Var;
		
        string Channel_End_Url_String = "/vote?currency=";
		
		var Menu_Bot_Currency_Var =	GetSetting("Menu_Bot_Currency");	 
		string Menu_Bot_Currency_string = Menu_Bot_Currency_Var;	

		//get all strings - Discordtip_LaccsFaucet_Main_ID
		string Channel_ID_AllUrl_MainString_Discordtip_LaccsFaucet = Channel_Base_Url_String + Discordtip_LaccsFaucet_Main_ID_String + Channel_End_Url_String + Menu_Bot_Currency_string;

		//===============//
		//Discordtip_LaccsFaucet ID
		//===============//
        if(Menu_Bot_Currency_Var=="btc" && GetBoolSetting("Discordtip_LaccsFaucet_vote_OnOff"))  
        {	
        GoToUrl(Channel_ID_AllUrl_MainString_Discordtip_LaccsFaucet);
        Log("Discordtip_LaccsFaucet - go to string url - btc");
        }
		
        if(Menu_Bot_Currency_Var=="bch" && GetBoolSetting("Discordtip_LaccsFaucet_vote_OnOff"))
        {	
        GoToUrl(Channel_ID_AllUrl_MainString_Discordtip_LaccsFaucet);
        Log("Discordtip_LaccsFaucet - go to string url - bch");
        }
		
        if(Menu_Bot_Currency_Var=="btg" && GetBoolSetting("Discordtip_LaccsFaucet_vote_OnOff"))
        {	
        GoToUrl(Channel_ID_AllUrl_MainString_Discordtip_LaccsFaucet);
        Log("Discordtip_LaccsFaucet - go to string url - btg");
        }
		
        if(Menu_Bot_Currency_Var=="dash" && GetBoolSetting("Discordtip_LaccsFaucet_vote_OnOff"))
        {	
        GoToUrl(Channel_ID_AllUrl_MainString_Discordtip_LaccsFaucet);
        Log("Discordtip_LaccsFaucet - go to string url - dash");
        }
		
        if(Menu_Bot_Currency_Var=="dgb" && GetBoolSetting("Discordtip_LaccsFaucet_vote_OnOff"))
        {	
        GoToUrl(Channel_ID_AllUrl_MainString_Discordtip_LaccsFaucet);
        Log("Discordtip_LaccsFaucet - go to string url - dgb");
        }
		
        if(Menu_Bot_Currency_Var=="doge" && GetBoolSetting("Discordtip_LaccsFaucet_vote_OnOff"))
        {	
        GoToUrl(Channel_ID_AllUrl_MainString_Discordtip_LaccsFaucet);
        Log("DiscordBotsTip - go to string url - doge");
        }
					
        if(Menu_Bot_Currency_Var=="eos" && GetBoolSetting("Discordtip_LaccsFaucet_vote_OnOff"))
        {	
        GoToUrl(Channel_ID_AllUrl_MainString_Discordtip_LaccsFaucet);
        Log("Discordtip_LaccsFaucet - go to string url - eos");
        }
		
        if(Menu_Bot_Currency_Var=="eth" && GetBoolSetting("Discordtip_LaccsFaucet_vote_OnOff"))
        {	
        GoToUrl(Channel_ID_AllUrl_MainString_Discordtip_LaccsFaucet);
        Log("Discordtip_LaccsFaucet - go to string url - eth");
        }
		
        if(Menu_Bot_Currency_Var=="ethos" && GetBoolSetting("Discordtip_LaccsFaucet_vote_OnOff"))
        {	
        GoToUrl(Channel_ID_AllUrl_MainString_Discordtip_LaccsFaucet);
        Log("Discordtip_LaccsFaucet - go to string url - ethos");
        }
		
        if(Menu_Bot_Currency_Var=="ltc" && GetBoolSetting("Discordtip_LaccsFaucet_vote_OnOff"))
        {	
        GoToUrl(Channel_ID_AllUrl_MainString_Discordtip_LaccsFaucet);
        Log("Discordtip_LaccsFaucet - go to string url - ltc");
        }
		
        if(Menu_Bot_Currency_Var=="omg" && GetBoolSetting("Discordtip_LaccsFaucet_vote_OnOff"))
        {	
        GoToUrl(Channel_ID_AllUrl_MainString_Discordtip_LaccsFaucet);
        Log("Discordtip_LaccsFaucet - go to string url - omg");
        }
		
        if(Menu_Bot_Currency_Var=="wax" && GetBoolSetting("Discordtip_LaccsFaucet_vote_OnOff"))
        {	
        GoToUrl(Channel_ID_AllUrl_MainString_Discordtip_LaccsFaucet);
        Log("Discordtip_LaccsFaucet - go to string url - wax");
        }
		
        if(Menu_Bot_Currency_Var=="xzc" && GetBoolSetting("Discordtip_LaccsFaucet_vote_OnOff"))
        {	
        GoToUrl(Channel_ID_AllUrl_MainString_Discordtip_LaccsFaucet);
        Log("Discordtip_LaccsFaucet - go to string url - xzc");
        }
		
        if(Menu_Bot_Currency_Var=="zec" && GetBoolSetting("Discordtip_LaccsFaucet_vote_OnOff"))
        {	
        GoToUrl(Channel_ID_AllUrl_MainString_Discordtip_LaccsFaucet);
        Log("Discordtip_LaccsFaucet - go to string url - zec");
        }
		//===============//
		
        return true;	
  } //end ADFunction_String_URL_Discordtip_LaccsFaucet
  //====================//
  

  //====================//
  //ADFunction_String_URL_Discordtip_Tippi
  //====================//
  private bool ADFunction_String_URL_Discordtip_Tippi()
  {

        string Channel_Base_Url_String = "https://discordbots.org/bot/";
		
		//Discordtip_Tippi_Main_ID
        var Discordtip_Tippi_Main_ID_Var = GetSetting("Discordtip_Tippi_Main_ID");
		string Discordtip_Tippi_Main_ID_String = Discordtip_Tippi_Main_ID_Var;
		
		//Custom_Bot_ID
        var Input_Custom_Bot_ID_Var = GetSetting("Input_Custom_Bot_ID_Setting");
		string Input_Custom_Bot_ID_String = Input_Custom_Bot_ID_Var;
		
        string Channel_End_Url_String = "/vote?currency=";
		
		var Menu_Bot_Currency_Var =	GetSetting("Menu_Bot_Currency");	 
		string Menu_Bot_Currency_string = Menu_Bot_Currency_Var;	

		//get all strings - Discordtip_Tippi_Main_ID
		string Channel_ID_AllUrl_MainString_Discordtip_Tippi = Channel_Base_Url_String + Discordtip_Tippi_Main_ID_String + Channel_End_Url_String + Menu_Bot_Currency_string;

		//===============//
		//Discordtip_Tippi ID
		//===============//
        if(Menu_Bot_Currency_Var=="btc" && GetBoolSetting("Discordtip_Tippi_vote_OnOff"))  
        {	
        GoToUrl(Channel_ID_AllUrl_MainString_Discordtip_Tippi);
        Log("Discordtip_Tippi - go to string url - btc");
        }
		
        if(Menu_Bot_Currency_Var=="bch" && GetBoolSetting("Discordtip_Tippi_vote_OnOff"))
        {	
        GoToUrl(Channel_ID_AllUrl_MainString_Discordtip_Tippi);
        Log("Discordtip_Tippi - go to string url - bch");
        }
		
        if(Menu_Bot_Currency_Var=="btg" && GetBoolSetting("Discordtip_Tippi_vote_OnOff"))
        {	
        GoToUrl(Channel_ID_AllUrl_MainString_Discordtip_Tippi);
        Log("Discordtip_Tippi - go to string url - btg");
        }
		
        if(Menu_Bot_Currency_Var=="dash" && GetBoolSetting("Discordtip_Tippi_vote_OnOff"))
        {	
        GoToUrl(Channel_ID_AllUrl_MainString_Discordtip_Tippi);
        Log("Discordtip_Tippi - go to string url - dash");
        }
		
        if(Menu_Bot_Currency_Var=="dgb" && GetBoolSetting("Discordtip_Tippi_vote_OnOff"))
        {	
        GoToUrl(Channel_ID_AllUrl_MainString_Discordtip_Tippi);
        Log("Discordtip_Tippi - go to string url - dgb");
        }
		
        if(Menu_Bot_Currency_Var=="doge" && GetBoolSetting("Discordtip_Tippi_vote_OnOff"))
        {	
        GoToUrl(Channel_ID_AllUrl_MainString_Discordtip_Tippi);
        Log("DiscordBotsTip - go to string url - doge");
        }
					
        if(Menu_Bot_Currency_Var=="eos" && GetBoolSetting("Discordtip_Tippi_vote_OnOff"))
        {	
        GoToUrl(Channel_ID_AllUrl_MainString_Discordtip_Tippi);
        Log("Discordtip_Tippi - go to string url - eos");
        }
		
        if(Menu_Bot_Currency_Var=="eth" && GetBoolSetting("Discordtip_Tippi_vote_OnOff"))
        {	
        GoToUrl(Channel_ID_AllUrl_MainString_Discordtip_Tippi);
        Log("Discordtip_Tippi - go to string url - eth");
        }
		
        if(Menu_Bot_Currency_Var=="ethos" && GetBoolSetting("Discordtip_Tippi_vote_OnOff"))
        {	
        GoToUrl(Channel_ID_AllUrl_MainString_Discordtip_Tippi);
        Log("Discordtip_Tippi - go to string url - ethos");
        }
		
        if(Menu_Bot_Currency_Var=="ltc" && GetBoolSetting("Discordtip_Tippi_vote_OnOff"))
        {	
        GoToUrl(Channel_ID_AllUrl_MainString_Discordtip_Tippi);
        Log("Discordtip_Tippi - go to string url - ltc");
        }
		
        if(Menu_Bot_Currency_Var=="omg" && GetBoolSetting("Discordtip_Tippi_vote_OnOff"))
        {	
        GoToUrl(Channel_ID_AllUrl_MainString_Discordtip_Tippi);
        Log("Discordtip_Tippi - go to string url - omg");
        }
		
        if(Menu_Bot_Currency_Var=="wax" && GetBoolSetting("Discordtip_Tippi_vote_OnOff"))
        {	
        GoToUrl(Channel_ID_AllUrl_MainString_Discordtip_Tippi);
        Log("Discordtip_Tippi - go to string url - wax");
        }
		
        if(Menu_Bot_Currency_Var=="xzc" && GetBoolSetting("Discordtip_Tippi_vote_OnOff"))
        {	
        GoToUrl(Channel_ID_AllUrl_MainString_Discordtip_Tippi);
        Log("Discordtip_Tippi - go to string url - xzc");
        }
		
        if(Menu_Bot_Currency_Var=="zec" && GetBoolSetting("Discordtip_Tippi_vote_OnOff"))
        {	
        GoToUrl(Channel_ID_AllUrl_MainString_Discordtip_Tippi);
        Log("Discordtip_Tippi - go to string url - zec");
        }
		//===============//
		
        return true;	
  } //end ADFunction_String_URL_Discordtip_Tippi
  //====================//
  
	
  //====================//
  //ADFunction_String_URL_DiscordBotsTip
  //====================//
  private bool ADFunction_String_URL_DiscordBotsTip()
  {
			
        string Channel_Base_Url_String = "https://discordbots.org/bot/";
		
		//Main ID - DiscordBotsTip ID
        var Discordtip_Main_ID_Var = GetSetting("Discordtip_Main_ID");
		string Discordtip_Main_ID_String = Discordtip_Main_ID_Var;
		
		//Custom_Bot_ID
        var Input_Custom_Bot_ID_Var = GetSetting("Input_Custom_Bot_ID_Setting");
		string Input_Custom_Bot_ID_String = Input_Custom_Bot_ID_Var;
		
        string Channel_End_Url_String = "/vote?currency=";
		
		var Menu_Bot_Currency_Var =	GetSetting("Menu_Bot_Currency");	 
		string Menu_Bot_Currency_string = Menu_Bot_Currency_Var;	
	    
		//get all strings - DiscordBotsTip ID
		string Channel_ID_AllUrl_MainString_DiscordBotsTip = Channel_Base_Url_String + Discordtip_Main_ID_String + Channel_End_Url_String + Menu_Bot_Currency_string;

		//get all strings - Custom_Bot_ID
		//string Custom_Bot_ID_AllUrl_MainString = Channel_Base_Url_String + Input_Custom_Bot_ID_String + Channel_End_Url_String + Menu_Bot_Currency_string;
		
		//===============//
		//DiscordBotsTip ID
		//===============//
        if(Menu_Bot_Currency_Var=="btc" && GetBoolSetting("Discordtip_Main_vote_OnOff"))  
        {	
        GoToUrl(Channel_ID_AllUrl_MainString_DiscordBotsTip);
        Log("DiscordBotsTip - go to string url - btc");
        }
		
        if(Menu_Bot_Currency_Var=="bch" && GetBoolSetting("Discordtip_Main_vote_OnOff"))
        {	
        GoToUrl(Channel_ID_AllUrl_MainString_DiscordBotsTip);
        Log("DiscordBotsTip - go to string url - bch");
        }
		
        if(Menu_Bot_Currency_Var=="btg" && GetBoolSetting("Discordtip_Main_vote_OnOff"))
        {	
        GoToUrl(Channel_ID_AllUrl_MainString_DiscordBotsTip);
        Log("DiscordBotsTip - go to string url - btg");
        }
		
        if(Menu_Bot_Currency_Var=="dash" && GetBoolSetting("Discordtip_Main_vote_OnOff"))
        {	
        GoToUrl(Channel_ID_AllUrl_MainString_DiscordBotsTip);
        Log("DiscordBotsTip - go to string url - dash");
        }
		
        if(Menu_Bot_Currency_Var=="dgb" && GetBoolSetting("Discordtip_Main_vote_OnOff"))
        {	
        GoToUrl(Channel_ID_AllUrl_MainString_DiscordBotsTip);
        Log("DiscordBotsTip - go to string url - dgb");
        }
		
        if(Menu_Bot_Currency_Var=="doge" && GetBoolSetting("Discordtip_Main_vote_OnOff"))
        {	
        GoToUrl(Channel_ID_AllUrl_MainString_DiscordBotsTip);
        Log("DiscordBotsTip - go to string url - doge");
        }
				
        if(Menu_Bot_Currency_Var=="eos" && GetBoolSetting("Discordtip_Main_vote_OnOff"))
        {	
        GoToUrl(Channel_ID_AllUrl_MainString_DiscordBotsTip);
        Log("DiscordBotsTip - go to string url - eos");
        }
		
        if(Menu_Bot_Currency_Var=="eth" && GetBoolSetting("Discordtip_Main_vote_OnOff"))
        {	
        GoToUrl(Channel_ID_AllUrl_MainString_DiscordBotsTip);
        Log("DiscordBotsTip - go to string url - eth");
        }
		
        if(Menu_Bot_Currency_Var=="ethos" && GetBoolSetting("Discordtip_Main_vote_OnOff"))
        {	
        GoToUrl(Channel_ID_AllUrl_MainString_DiscordBotsTip);
        Log("DiscordBotsTip - go to string url - ethos");
        }
		
        if(Menu_Bot_Currency_Var=="ltc" && GetBoolSetting("Discordtip_Main_vote_OnOff"))
        {	
        GoToUrl(Channel_ID_AllUrl_MainString_DiscordBotsTip);
        Log("DiscordBotsTip - go to string url - ltc");
        }
		
        if(Menu_Bot_Currency_Var=="omg" && GetBoolSetting("Discordtip_Main_vote_OnOff"))
        {	
        GoToUrl(Channel_ID_AllUrl_MainString_DiscordBotsTip);
        Log("DiscordBotsTip - go to string url - omg");
        }
		
        if(Menu_Bot_Currency_Var=="wax" && GetBoolSetting("Discordtip_Main_vote_OnOff"))
        {	
        GoToUrl(Channel_ID_AllUrl_MainString_DiscordBotsTip);
        Log("DiscordBotsTip - go to string url - wax");
        }
		
        if(Menu_Bot_Currency_Var=="xzc" && GetBoolSetting("Discordtip_Main_vote_OnOff"))
        {	
        GoToUrl(Channel_ID_AllUrl_MainString_DiscordBotsTip);
        Log("DiscordBotsTip - go to string url - xzc");
        }
		
        if(Menu_Bot_Currency_Var=="zec" && GetBoolSetting("Discordtip_Main_vote_OnOff"))
        {	
        GoToUrl(Channel_ID_AllUrl_MainString_DiscordBotsTip);
        Log("DiscordBotsTip - go to string url - zec");
        }
		//===============//

		//===============//
		//Custom_Bot_ID
		//===============//
		/*
        if(Menu_Bot_Currency_Var=="btc" && GetBoolSetting("Custom_Bot_ID_OnOff")) 
        {	
        GoToUrl(Custom_Bot_ID_AllUrl_MainString);
        Log("go to string url - Custom_Bot_ID  - btc");
        }
		
        if(Menu_Bot_Currency_Var=="bch" && GetBoolSetting("Custom_Bot_ID_OnOff")) 
        {	
        GoToUrl(Custom_Bot_ID_AllUrl_MainString);
        Log("go to string url - Custom_Bot_ID  - bch");
        }
		
        if(Menu_Bot_Currency_Var=="btg" && GetBoolSetting("Custom_Bot_ID_OnOff")) 
        {	
        GoToUrl(Custom_Bot_ID_AllUrl_MainString);
        Log("go to string url - Custom_Bot_ID  - btg");
        }
		
        if(Menu_Bot_Currency_Var=="dash" && GetBoolSetting("Custom_Bot_ID_OnOff")) 
        {	
        GoToUrl(Custom_Bot_ID_AllUrl_MainString);
        Log("go to string url - Custom_Bot_ID  - dash");
        }
		
        if(Menu_Bot_Currency_Var=="dgb" && GetBoolSetting("Custom_Bot_ID_OnOff")) 
        {	
        GoToUrl(Custom_Bot_ID_AllUrl_MainString);
        Log("go to string url - Custom_Bot_ID  - dgb");
        }
		
        if(Menu_Bot_Currency_Var=="doge" && GetBoolSetting("Custom_Bot_ID_OnOff"))
        {	
        GoToUrl(Custom_Bot_ID_AllUrl_MainString);
        Log("DiscordBotsTip - go to string url - doge");
        }
				
        if(Menu_Bot_Currency_Var=="eos" && GetBoolSetting("Custom_Bot_ID_OnOff")) 
        {	
        GoToUrl(Custom_Bot_ID_AllUrl_MainString);
        Log("go to string url - Custom_Bot_ID  - eos");
        }
		
        if(Menu_Bot_Currency_Var=="eth" && GetBoolSetting("Custom_Bot_ID_OnOff")) 
        {	
        GoToUrl(Custom_Bot_ID_AllUrl_MainString);
        Log("go to string url - Custom_Bot_ID  - eth");
        }
		
        if(Menu_Bot_Currency_Var=="ethos" && GetBoolSetting("Custom_Bot_ID_OnOff")) 
        {	
        GoToUrl(Custom_Bot_ID_AllUrl_MainString);
        Log("go to string url - Custom_Bot_ID  - ethos");
        }
		
        if(Menu_Bot_Currency_Var=="ltc" && GetBoolSetting("Custom_Bot_ID_OnOff")) 
        {	
        GoToUrl(Custom_Bot_ID_AllUrl_MainString);
        Log("go to string url - Custom_Bot_ID  - ltc");
        }
		
        if(Menu_Bot_Currency_Var=="omg" && GetBoolSetting("Custom_Bot_ID_OnOff")) 
        {	
        GoToUrl(Custom_Bot_ID_AllUrl_MainString);
        Log("go to string url - Custom_Bot_ID  - omg");
        }
		
        if(Menu_Bot_Currency_Var=="wax" && GetBoolSetting("Custom_Bot_ID_OnOff")) 
        {	
        GoToUrl(Custom_Bot_ID_AllUrl_MainString);
        Log("go to string url - Custom_Bot_ID  - wax");
        }
		
        if(Menu_Bot_Currency_Var=="xzc" && GetBoolSetting("Custom_Bot_ID_OnOff")) 
        {	
        GoToUrl(Custom_Bot_ID_AllUrl_MainString);
        Log("go to string url - Custom_Bot_ID  - xzc");
        }
		
        if(Menu_Bot_Currency_Var=="zec" && GetBoolSetting("Custom_Bot_ID_OnOff")) 
        {	
        GoToUrl(Custom_Bot_ID_AllUrl_MainString);
        Log("go to string url - Custom_Bot_ID  - zec");
        }
		*/
		//===============//
		
        return true;	
  } //end ADFunction_String_URL_DiscordBotsTip
  //====================//


        //=================//
       //TopSite_Function
        //=================//
        public int TopSite_Function()
        {
			
	      Title = "TopSite";	
		  GoToUrl("http://bit.ly/TopSite-AD");
		  Log("WonPe TOP"); 
          Wait();
          Wait(17);
		  
		return 0;
        }//end TopSite_Function
        //=================//		


        //=================//
       //Discord_PopUp_General_Function
        //=================//
        public int Discord_PopUp_General_Function()
        {
          var Discord_PopUp_General = ElementByXPath("//button[contains(@type,'button') and contains(@aria-label,'Close') or contains(@aria-label,'close') and contains(@class,'close-') ] ");
	      if (Discord_PopUp_General !=null) //visible
          {
		    Log("Discord_PopUp_General - apper - we close it"); 	
            Click(Discord_PopUp_General);
          }  	
		  
          var Nitro_Games_PopUp = ElementByXPath("//div[@class='contents-18-Yxp' and contains(text(),'Cancel')]");
	      if (IsVisible(Nitro_Games_PopUp))
          {
		    Log("Nitro_Games_PopUp - apper - we close it "); 	
            Click(Nitro_Games_PopUp);
          }
		  
		return 0;
        }//end Discord_PopUp_General_Function
        //=================//	


        //=================//
       //invisible_Recaptcha_Function
        //=================//
        public int invisible_Recaptcha_Function()
        {
			
          var RecaptchaOpen_Iframe = ElementByXPath ("//div[contains(@style,'opacity: 1')]//iframe[contains(@src,'recaptcha')]");  
          if (RecaptchaOpen_Iframe !=null)          
		  {
            //SolveCaptcha if apper
            Log("DO invisible_Recaptcha");	  
            var result = base.DoSolveCaptcha();
            if (result > 0)
            {
                return Fail("Recaptcha - Fail solving captcha");
            }
		    RecaptchaUtility utility = new RecaptchaUtility(this);
            utility.DoSolve();
		    
            Wait();
		    
            //ExecuteScript("afterResolveCaptcha");
		  }
		
		return 0;
        }//end invisible_Recaptcha_Function
        //=================//	


        //=================//
       //Captcha_All_Function
        //=================//

        public int Captcha_All_Function()
        {

		  //ServerCaptchaBot - in Discord - user inbox
          var ServerCaptchaBot = ElementByXPath("//div[contains(@id,'chat-messages') and position()=last()-1]//img[contains(@src,'captcha') ] | //div[contains(@id,'chat-messages') and position()=last()-1]//strong[contains(text(),'Attempt Failed')] "); 
          if (IsVisible(ServerCaptchaBot))
		  {  
	  
              Log("DO ServerCaptchaBot");
			  
 		      var ImageVAR = ElementByXPath("//div[contains(@id,'chat-messages') and position()=last()-1]//img[contains(@src,'captcha') ]");           
		      var TextVAR = ElementByXPath("//div[contains(@class,'inner')]/div[contains(@class,'textArea')]"); 
			  
	          var BotResult = DoSolveImageCaptcha(ImageVAR,TextVAR);
              if (BotResult > 0)
              {
                  return Fail("ServerCaptchaBot - Fail solving captcha");
              }
			  
              Actions Builder_17_Act = new Actions(Driver);
              Builder_17_Act.MoveToElement(TextVAR).Build().Perform(); 
              Wait(3);
              Builder_17_Act.SendKeys(TextVAR, Context.CaptchaResult.Result ).Build().Perform();
			  
              Wait(3);
			  	      
		      Enter_SendKeys_General_Discord_Input_Function();	//call to enter
		      
              Wait(2);	

              var Captcha_Check = ElementByXPath("//div[contains(@id,'chat-messages') and position()=last()-1]//strong[contains(text(),'Attempt Failed')]"); 
              if (IsVisible(Captcha_Check))
		      {  
		         Log("ServerCaptchaBot - Failed");
			  }
              if (!IsVisible(Captcha_Check))
		      {
		         Log("ServerCaptchaBot - Success");
			  }		
			  
              Wait();
			  
		  } //end ServerCaptchaBot

			
          //SolveMedia
          var SolveMedia = ElementByXPath ("//img[contains(@id,'adcopy-puzzle-image-image')]"); 
          if (IsVisible(SolveMedia))
		  {  
            Log("DO SolveMedia");	  
	        var result_2 = DoSolveImageCaptcha(ElementByXPath("//img[contains(@id,'adcopy-puzzle-image-image')]"),ElementByXPath("//input[@name='adcopy_response']")); 
            if (result_2 > 0)
            {
                return Fail("SolveMedia - Fail solving captcha");
            }
		  } //end SolveMedia

		  
	      //for recaptcha popup after click on button - ("//button[contains(@class,'reload')] | //button[contains(@id,'reload')] ")
          var RecaptchaOpen_Iframe = ElementByXPath ("//iframe[contains(@src,'recaptcha/api2/anchor')]"); 
          if (IsVisible(RecaptchaOpen_Iframe))
		  {
            //SolveCaptcha if apper
            Log("DO Recaptcha");	  
            var result = base.DoSolveCaptcha();
            if (result > 0)
            {
                return Fail("Recaptcha - Fail solving captcha");
            }
            RecaptchaUtility utility = new RecaptchaUtility(this);
            utility.DoSolve();
		  } //end Recaptcha

		return 0;
        }//end Captcha_All_Function
        //=================//	

} //public class discordapp
